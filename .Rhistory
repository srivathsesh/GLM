# remove TARGET_FLAG and TARGET_AMT
predictionfile <- predictionfile %>% select(c(-2,-3))
# impute data
df.imp <- VIM::kNN(predictionfile)
# indicator variables created
factorcols <- sapply(df.imp,is.factor)
dummyvars <- dummy::dummy(df.imp[,factorcols],int = T)
df.imp<- cbind(df.imp,dummyvars) %>%
dplyr::mutate(JOB.category = ifelse(JOB %in% c("Student", "Home Maker", "Clerical", "z_Blue_Collar"),0,1))
# Score model
P_TARGET_FLAG <- predict(train.logistic.rev,newdata = df.imp, type = 'response')
p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,6)
test_p <- df.imp %>%
mutate(L_TARGET_FLAG = -1.259624 - 3.1e-05 * BLUEBOOK  + 2.167618 *  URBANICITY_Highly.Urban..Urban  + 0.702162 *  CAR_USE_Commercial  + 0.347951 *  KIDSDRIV  + 0.015133 *  TRAVTIME  + 0.123052 *  MVR_PTS  - 0.034292 *  CAR_AGE  - 0.817843 *  REVOKED_No  - 0.589647 *  PARENT1_No  - 2e-06 *  HOME_VAL  - 0.05017 *  TIF  + 0.182037 *  CLM_FREQ  - 0.824964 *  CAR_TYPE_Minivan  - 0.235501 *  MSTATUS_Yes  - 0.40715 *  JOB_.  - 0.97424 *  JOB_Manager) %>%
mutate(P_TARGET_FLAG = (1+exp(-1*L_TARGET_FLAG))^-1)
library("dplyr")
predictionfile <- read.csv(file = 'logit_insurance_test.csv')
# remove TARGET_FLAG and TARGET_AMT
predictionfile <- predictionfile %>% select(c(-2,-3))
# impute data
df.imp <- VIM::kNN(predictionfile)
# indicator variables created
factorcols <- sapply(df.imp,is.factor)
dummyvars <- dummy::dummy(df.imp[,factorcols],int = T)
df.imp<- cbind(df.imp,dummyvars) %>%
dplyr::mutate(JOB.category = ifelse(JOB %in% c("Student", "Home Maker", "Clerical", "z_Blue_Collar"),0,1))
# Score model
P_TARGET_FLAG <- predict(train.logistic.rev,newdata = df.imp, type = 'response')
p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,6)
test_p <- df.imp %>%
mutate(L_TARGET_FLAG = -1.259624 - 3.1e-05 * BLUEBOOK  + 2.167618 *  URBANICITY_Highly.Urban..Urban  + 0.702162 *  CAR_USE_Commercial  + 0.347951 *  KIDSDRIV  + 0.015133 *  TRAVTIME  + 0.123052 *  MVR_PTS  - 0.034292 *  CAR_AGE  - 0.817843 *  REVOKED_No  - 0.589647 *  PARENT1_No  - 2e-06 *  HOME_VAL  - 0.05017 *  TIF  + 0.182037 *  CLM_FREQ  - 0.824964 *  CAR_TYPE_Minivan  - 0.235501 *  MSTATUS_Yes  - 0.40715 *  JOB_.  - 0.97424 *  JOB_Manager) %>%
mutate(P_TARGET_FLAG = (1+exp(-1*L_TARGET_FLAG))^-1)
plot(P_TARGET_FLAG)
plot(test_p$P_TARGET_FLAG)
p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,8)
p.eqn
library("dplyr")
predictionfile <- read.csv(file = 'logit_insurance_test.csv')
# remove TARGET_FLAG and TARGET_AMT
predictionfile <- predictionfile %>% select(c(-2,-3))
# impute data
df.imp <- VIM::kNN(predictionfile)
# indicator variables created
factorcols <- sapply(df.imp,is.factor)
dummyvars <- dummy::dummy(df.imp[,factorcols],int = T)
df.imp<- cbind(df.imp,dummyvars) %>%
dplyr::mutate(JOB.category = ifelse(JOB %in% c("Student", "Home Maker", "Clerical", "z_Blue_Collar"),0,1))
# Score model
P_TARGET_FLAG <- predict(train.logistic.rev,newdata = df.imp, type = 'response')
p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,8)
test_p <- df.imp %>%
mutate(L_TARGET_FLAG = -1.25962419 - 3.12e-05 * BLUEBOOK  + 2.16761818 *  URBANICITY_Highly.Urban..Urban  + 0.70216247 *  CAR_USE_Commercial  + 0.34795086 *  KIDSDRIV  + 0.01513301 *  TRAVTIME  + 0.12305204 *  MVR_PTS  - 0.03429193 *  CAR_AGE  - 0.81784286 *  REVOKED_No  - 0.58964657 *  PARENT1_No  - 1.9e-06 *  HOME_VAL  - 0.05017022 *  TIF  + 0.18203741 *  CLM_FREQ  - 0.82496441 *  CAR_TYPE_Minivan  - 0.23550083 *  MSTATUS_Yes  - 0.40715006 *  JOB_.  - 0.97424013 *  JOB_Manager) %>%
mutate(P_TARGET_FLAG = (1+exp(-1*L_TARGET_FLAG))^-1)
plot(P_TARGET_FLAG)
plot(test_p$P_TARGET_FLAG)
library("dplyr")
predictionfile <- read.csv(file = 'logit_insurance_test.csv')
# remove TARGET_FLAG and TARGET_AMT
predictionfile <- predictionfile %>% select(c(-2,-3))
# impute data
df.imp <- VIM::kNN(predictionfile)
# indicator variables created
factorcols <- sapply(df.imp,is.factor)
dummyvars <- dummy::dummy(df.imp[,factorcols],int = T)
df.imp<- cbind(df.imp,dummyvars) %>%
dplyr::mutate(JOB.category = ifelse(JOB %in% c("Student", "Home Maker", "Clerical", "z_Blue_Collar"),0,1))
# Score model
#P_TARGET_FLAG <- predict(train.logistic.rev,newdata = df.imp, type = 'response') - Use this in the source file to check
# p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,8) - Use this to get the eta equation correctly...available in the source
#
test_p <- df.imp %>%
mutate(L_TARGET_FLAG = -1.25962419 - 3.12e-05 * BLUEBOOK  + 2.16761818 *  URBANICITY_Highly.Urban..Urban  + 0.70216247 *  CAR_USE_Commercial  + 0.34795086 *  KIDSDRIV  + 0.01513301 *  TRAVTIME  + 0.12305204 *  MVR_PTS  - 0.03429193 *  CAR_AGE  - 0.81784286 *  REVOKED_No  - 0.58964657 *  PARENT1_No  - 1.9e-06 *  HOME_VAL  - 0.05017022 *  TIF  + 0.18203741 *  CLM_FREQ  - 0.82496441 *  CAR_TYPE_Minivan  - 0.23550083 *  MSTATUS_Yes  - 0.40715006 *  JOB_.  - 0.97424013 *  JOB_Manager) %>%
mutate(P_TARGET_FLAG = (1+exp(-1*L_TARGET_FLAG))^-1) %>%
mutate(TARGET_AMT = ifelse(P_TARGET_FLAG < 0.5, 0, 4434.04 - 52.11 * CAR_AGE  + 0.12 *  BLUEBOOK))
library("dplyr")
predictionfile <- read.csv(file = 'logit_insurance_test.csv')
# remove TARGET_FLAG and TARGET_AMT
predictionfile <- predictionfile %>% select(c(-2,-3))
# impute data
df.imp <- VIM::kNN(predictionfile)
# indicator variables created
factorcols <- sapply(df.imp,is.factor)
dummyvars <- dummy::dummy(df.imp[,factorcols],int = T)
df.imp<- cbind(df.imp,dummyvars) %>%
dplyr::mutate(JOB.category = ifelse(JOB %in% c("Student", "Home Maker", "Clerical", "z_Blue_Collar"),0,1))
# Score model
#P_TARGET_FLAG <- predict(train.logistic.rev,newdata = df.imp, type = 'response') - Use this in the source file to check
# p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,8) - Use this to get the eta equation correctly...available in the source
#
test_p <- df.imp %>%
mutate(L_TARGET_FLAG = -1.25962419 - 3.12e-05 * BLUEBOOK  + 2.16761818 *  URBANICITY_Highly.Urban..Urban  + 0.70216247 *  CAR_USE_Commercial  + 0.34795086 *  KIDSDRIV  + 0.01513301 *  TRAVTIME  + 0.12305204 *  MVR_PTS  - 0.03429193 *  CAR_AGE  - 0.81784286 *  REVOKED_No  - 0.58964657 *  PARENT1_No  - 1.9e-06 *  HOME_VAL  - 0.05017022 *  TIF  + 0.18203741 *  CLM_FREQ  - 0.82496441 *  CAR_TYPE_Minivan  - 0.23550083 *  MSTATUS_Yes  - 0.40715006 *  JOB_.  - 0.97424013 *  JOB_Manager) %>%
mutate(P_TARGET_FLAG = (1+exp(-1*L_TARGET_FLAG))^-1) %>%
mutate(TARGET_AMT = ifelse(P_TARGET_FLAG < 0.5, 0, 4434.04 - 52.11 * CAR_AGE  + 0.12 *  BLUEBOOK)) %>%
mutate(CRASH = ifelse(P_TARGET_FLAG < 0.5, 0, 1))
# check results ... simple plots
#ggplot(data = test_p, mapping = aes(x = ))
ggplot(data = test_p, mapping = aes(x = CRASH, y = TARGET_AMT )) + geom_point()
ggplot(data = test_p, mapping = aes(x = CRASH, y = TARGET_AMT )) + geom_point()
library("dplyr")
predictionfile <- read.csv(file = 'logit_insurance_test.csv')
# remove TARGET_FLAG and TARGET_AMT
predictionfile <- predictionfile %>% select(c(-2,-3))
# impute data
df.imp <- VIM::kNN(predictionfile)
# indicator variables created
factorcols <- sapply(df.imp,is.factor)
dummyvars <- dummy::dummy(df.imp[,factorcols],int = T)
df.imp<- cbind(df.imp,dummyvars) %>%
dplyr::mutate(JOB.category = ifelse(JOB %in% c("Student", "Home Maker", "Clerical", "z_Blue_Collar"),0,1))
# Score model
#P_TARGET_FLAG <- predict(train.logistic.rev,newdata = df.imp, type = 'response') - Use this in the source file to check
# p.eqn <- getequation("P_TARGET_FLAG",train.logistic.rev,8) - Use this to get the eta equation correctly...available in the source
#
test_p <- df.imp %>%
mutate(L_TARGET_FLAG = -1.25962419 - 3.12e-05 * BLUEBOOK  + 2.16761818 *  URBANICITY_Highly.Urban..Urban  + 0.70216247 *  CAR_USE_Commercial  + 0.34795086 *  KIDSDRIV  + 0.01513301 *  TRAVTIME  + 0.12305204 *  MVR_PTS  - 0.03429193 *  CAR_AGE  - 0.81784286 *  REVOKED_No  - 0.58964657 *  PARENT1_No  - 1.9e-06 *  HOME_VAL  - 0.05017022 *  TIF  + 0.18203741 *  CLM_FREQ  - 0.82496441 *  CAR_TYPE_Minivan  - 0.23550083 *  MSTATUS_Yes  - 0.40715006 *  JOB_.  - 0.97424013 *  JOB_Manager) %>%
mutate(P_TARGET_FLAG = (1+exp(-1*L_TARGET_FLAG))^-1) %>%
mutate(TARGET_AMT = ifelse(P_TARGET_FLAG < 0.5, 0, 4434.04 - 52.11 * CAR_AGE  + 0.12 *  BLUEBOOK)) %>%
mutate(CRASH = ifelse(P_TARGET_FLAG < 0.5, 0, 1)) %>%
select(INDEX,P_TARGET_FLAG,TARGET_AMT)
# check results ... simple plots
write.csv(test_p,'SESHADRI.logit_insurance_test.csv')
male_Yes <- 10
male_no <- 30
male_total <- male_Yes + male_no
female_Yes <- 6
female_no <- 34
female_total <- female_Yes + female_no
prob_male_use <- male_Yes/male_total
prob_female_use <- female_Yes/female_total
odds_male_use <- prob_male_use/(1-prob_male_use)
odds_male_use
knitr::opts_chunk$set(echo = TRUE)
odds_Female_use <- 6/34
odds_Female_use
odds_female_use <- prob_female_use/(1 - prob_female_use)
odds_female_use
2/(38/58)
OR.Male.to.Female <- odds_Male_use/odds_female_use
# Data
Male_Yes <- 10
Male_No <- 30
Female_Yes <- 6
Female_No <- 34
# Odds among male and females
odds_Male_use <- 10/30
odds_Female_use <- 6/34
# odds ratio Male vs Female
OR.Male.to.Female <- odds_Male_use/odds_female_use
OR.Male.to.Female
odds_ratio <- odds_male_use/odds_female_use
odds_ratio
p.male.use <- Male_Yes/(Male_Yes + Male_No)
p.female.use <- Female_Yes/(Female_Yes + Female_No)
p.male.use
p.female.use
prob_male_use
prob_female_use
# Data
Male_Yes <- 10
Male_No <- 30
Female_Yes <- 6
Female_No <- 34
# Probabilities of use among male and females
p.male.use <- Male_Yes/(Male_Yes + Male_No)
p.female.use <- Female_Yes/(Female_Yes + Female_No)
# Odds among male and females
odds_Male_use <- Male_Yes/Male_No
odds_Female_use <- Female_Yes/Female_No
# odds ratio Male vs Female
OR.Male.to.Female <- odds_Male_use/odds_female_use
Q1df <- data.frame(Prob.Male.use = p.male.use, Prob.Female.use = p.female.use, Odd.Male.use = odds_Male_use, Odds.Female.use = odds_Female_use, `OddsRatio m/f` = OR.Male.to.Female)
knitr::kable(Q1df)
# Data
Male_Yes <- 10
Male_No <- 30
Female_Yes <- 6
Female_No <- 34
# Probabilities of use among male and females
p.male.use <- Male_Yes/(Male_Yes + Male_No)
p.female.use <- Female_Yes/(Female_Yes + Female_No)
# Odds among male and females
odds_Male_use <- Male_Yes/Male_No
odds_Female_use <- Female_Yes/Female_No
# odds ratio Male vs Female
OR.Male.to.Female <- odds_Male_use/odds_female_use
Q1df <- data.frame(Prob.Male.use = p.male.use, Prob.Female.use = p.female.use, Odd.Male.use = odds_Male_use, Odds.Female.use = odds_Female_use, `OddsRatio m/f` = OR.Male.to.Female)
knitr::kable(round(Q1df,2))
religion <- read.csv(file = 'religion.csv')
View(religion)
sanitycheck <- do.call(rbind,dfapply(df,favstats, select = is.numeric))
sanitycheck <- do.call(rbind,dfapply(religion,favstats, select = is.numeric))
knitr::kable(round(sanitycheck,2), caption = "Summary statistics")
religion <- read.csv(file = 'religion.csv')
sanitycheck <- do.call(rbind,dfapply(religion,favstats, select = is.numeric))
#knitr::kable(round(sanitycheck,2), caption = "Summary statistics")
# note there is missing data
attending.respondents <- sum(religion$RELSCHOL)
Total.respondents <- nrow(religion)
odds_relschol <- attending.respondents/(Total.respondents - attending.respondents)
odds_relschol
sum(religion$RELSCHOL)
nrow(religion)
prob_attend <- sum(religion$RELSCHOL)/nrow(religion)
odds_attend <- prob_attend/(1 - prob_attend)
odds_attend
prob_relschol <- attending.respondents/(Total.respondents)
prob_relschol
prob_attend
table(religion$RELSCHOL,religion$RACE)
install.packages("descr")
descr::CrossTable(religion$RELSCHOL,religion$RACE)
descr::CrossTable(religion$RELSCHOL,religion$RACE,prop.r = F,prop.c = F,prop.chisq = F)
descr::CrossTable(religion$RELSCHOL,religion$RACE,prop.r = F,prop.c = F,prop.chisq = F,prop.t = F)
ct <- descr::CrossTable(religion$RELSCHOL,religion$RACE,prop.r = F,prop.c = F,prop.chisq = F,prop.t = F)
ct
as.data.frame(ct)
ct
table(religion$RELSCHOL,religion$RACE)
Prob.nonwhite.relschool.attend <- crosstable[2,1]/sum(crosstable[,1])
crosstable <- table(religion$RELSCHOL,religion$RACE)
Prob.nonwhite.relschool.attend <- crosstable[2,1]/sum(crosstable[,1])
Prob.white.relschool.attend <- crosstable[2,2] / sum(crosstable[,2])
Prob.nonwhite.relschool.attend
Prob.white.relschool.attend
non_white_no <- 76
non_white_Yes <- 26
non_white_total <- non_white_no + non_white_Yes
white_no <- 470
white_Yes <- 54
white_total <- white_no + white_Yes
prob_non_white <- non_white_Yes/non_white_total
prob_white <- white_Yes/white_total
prob_non_white
Prob.nonwhite.relschool.attend
Prob.white.relschool.attend
prob_white
crosstable
ct
religion <- read.csv(file = 'religion.csv')
sanitycheck <- do.call(rbind,dfapply(religion,favstats, select = is.numeric))
#knitr::kable(round(sanitycheck,2), caption = "Summary statistics")
# note there is missing data
attending.respondents <- sum(religion$RELSCHOL)
Total.respondents <- nrow(religion)
odds_relschol <- attending.respondents/(Total.respondents - attending.respondents)
prob_relschol <- attending.respondents/(Total.respondents)
ct <- descr::CrossTable(religion$RELSCHOL,religion$RACE,prop.r = F,prop.c = F,prop.chisq = F,prop.t = F)
ct
crosstable <- table(religion$RELSCHOL,religion$RACE)
Prob.nonwhite.relschool.attend <- crosstable[2,1]/sum(crosstable[,1])
Prob.white.relschool.attend <- crosstable[2,2] / sum(crosstable[,2])
odds.nonwhite.relschool.attend <- crosstable[2,1]/crosstable[1,1]
odds.white.relschool.attend <- crosstable[2,2]/crosstable[1,2]
OR <- odds.white.relschool.attend/odds.nonwhite.relschool.attend
odds.nonwhite.relschool.attend
odd_non_white <- prob_non_white/ (1 - prob_non_white)
odd_non_white
odd_white <- prob_white/ (1 - prob_white)
odd_white
odds_ratio_2.b <- odd_white/odd_non_white
odds_ratio_2.b
odds.white.relschool.attend <- crosstable[2,2]/crosstable[1,2]
OR <- odds.white.relschool.attend/odds.nonwhite.relschool.attend
OR
model1 <- glm(RELSCHOL ~ RACE, family = binomial,data = religion)
model1 <- glm(RELSCHOL ~ RACE, family = binomial,data = religion)
model2 <- glm(RELSCHOL ~ RACE + ATTEND + INCOME, family = binomial,data = religion)
summary(model1)
coef1 <- summay(model1)$coefficients
coef1 <- summary(model1)$coefficients
coef1
coef1 <- coefficients(model1)
coef1
coef1 <- coefficients(model1)[2]
coef1
exp(coef1)
q3bdf <- data.frame(Model = c(1,2),AIC = c(AIC_model1,AIC_model2), BIC = c(BIC_model1,BIC_model2))
model1 <- glm(RELSCHOL ~ RACE, family = binomial,data = religion)
model2 <- glm(RELSCHOL ~ RACE + ATTEND + INCOME, family = binomial,data = religion)
summary(model1)
coef1 <- coefficients(model1)[2]
odds.ratio <- exp(coef1)
AIC_model1 <- AIC(model1)
BIC_model1 <- BIC(model1)
AIC_model2 <- AIC(model2)
BIC_model2 <- BIC(model2)
q3bdf <- data.frame(Model = c(1,2),AIC = c(AIC_model1,AIC_model2), BIC = c(BIC_model1,BIC_model2))
knitr::kable(q3df)
q3bdf <- data.frame(Model = c(1,2),AIC = c(AIC_model1,AIC_model2), BIC = c(BIC_model1,BIC_model2))
q3bdf
odds_relschol
prob_relschol
length(odds_relschol)
odds_relschol
odds_relschol
prob_relschol
odds_relschol
source("getequation.R")
eqn <- getequation("RELSCHOL",model2)
eqn
RACE <- c(1,0)
ATTEND <- c(5,5)
INCOME <- c(4,4)
logoddsRELSHOL <- -3.58 - 1.29 * RACE  + 0.33 *  ATTEND  + 0.2 *  INCOME
odds_RELSCHOL <- exp(logoddsRELSHOL)
odds_RELSCHOL
paste("The odds of attendance for white and non white are ", odds_RELSCHOL, "respectively")
paste("The odds of attendance for white and non white are ", odds_RELSCHOL[1], "and",odds_RELSCHOL[2], "respectively")
paste("The odds of attendance for white and non white are ", round(odds_RELSCHOL[1],2), "and",round(odds_RELSCHOL[2],2), "respectively")
summary(model1)
summary(model2)
summary(model1)
summary(model2)
coefficients(model2)
adj.odds.Ratio <- exp(coefficients(model2)[2])
adj.odds.Ratio
names(adj.odds.Ratio) <- NULL
adj.odds.Ratio
summary(model2)
adj.odds.Ratio
knitr::opts_chunk$set(echo = TRUE,tidy = T, out.width = 60)
model1.probit <- glm(RELSCHOL ~ RACE, family = binomial(link = 'probit'),data = religion)
model2.probit <- glm(RELSCHOL ~ RACE + ATTEND + INCOME, family = binomial(link = 'probit'),data = religion)
model1.probit$fitted.values
summary(model1.probit)
pnorm(-0.6591)
pRob.White.attendance <- pnorm(sum(coefficients(model1.probit)))
model1.probit
summary(model1.probit)
prob.NonWhite.attendance <- pnorm(coefficients(model1.probit)[1])
AIC_model1.probit <- AIC(model1.probit)
BIC_model1.probit <- BIC(model1.probit)
AIC_model2.probit <- AIC(model2.probit)
BIC_model2.probit <- BIC(model2.probit)
q4bdf <- data.frame(Model = c(1,2),AIC = c(AIC_model1.probit,AIC_model2.probit), BIC = c(BIC_model1.probit,BIC_model2.probit))
AIC_model1.probit <- AIC(model1.probit)
BIC_model1.probit <- BIC(model1.probit)
AIC_model2.probit <- AIC(model2.probit)
BIC_model2.probit <- BIC(model2.probit)
q4bdf <- data.frame(Model = c(1,2),AIC = c(AIC_model1.probit,AIC_model2.probit), BIC = c(BIC_model1.probit,BIC_model2.probit))
knitr::kable(q4bdf, caption = "AIC and BICs for probit")
eqn2 <- getequation(model2.probit)
eqn2 <- getequation("ATTEND",model2.probit)
eqn2
eqn2 <- getequation("ATTEND",model2.probit)
RACE <- c(1,0)
ATTEND <- c(5,5)
INCOME <- c(4,4)
predicted.probs <- pnorm(-2.07 - 0.73 * RACE  + 0.19 *  ATTEND  + 0.12 *  INCOME)
knitr::opts_chunk$set(echo = TRUE,tidy = T, out.width = 60)
model1.probit <- glm(RELSCHOL ~ RACE, family = binomial(link = 'probit'),data = religion)
knitr::opts_chunk$set(echo = TRUE,tidy = T, out.width = 50)
religion <- read.csv(file = 'religion.csv')
model2 <- glm(RELSCHOL ~ RACE + ATTEND + INCOME, family = binomial,data = religion)
broom::augment(model2)
test <- broom::augment(model2)
plot(model2)
model2$df.residual
plot(model2$residuals,test$.resid)
broom::tidy(model2)
broom::glance(model2)
head(broom::augment(model2))
plot(model2$fitted.values,test$.fitted)
log(0.6)
plot(model2$fitted.values,exp(test$.fitted))
plot(log(model2$fitted.values),test$.fitted)
predicted.rev <- 1/(1+exp(-1*test$.fitted))
plot(model2$fitted.values,predicted.rev)
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv(file = 'Aircraft Damage.xls')
mydata <- read.table(file = 'Aircraft Damage.xls')
mydata <- readxl::read_xls(file = 'Aircraft Damage.xls')
mydata <- readxl::read_xls('Aircraft Damage.xls')
View(mydata)
mydata <- mydata[,-1]
hist(mydata[,1])
mydata <- mydata[,-1]
hist(mydata[ ,1])
mydata <- readxl::read_xls('Aircraft Damage.xls')
mydata <- mydata[,-1]
hist(mydata[ ,1])
hist(mydata[ ,y])
hist(mydata[ ,'y'])
hist(mydata$y)
plot(mydata$x2,mydata$x3)
plot(mydata$x2,mydata$x3,col = mydata$x1)
plot(mydata$x2,mydata$x3,col = ifelse(mydata$x1,"red","black"))
library(ggplot2)
library(magrittr)
lattice::xyplot(x2~x3,data= mydata, group = x1)
lattice::xyplot(x3~x2,data= mydata, group = y, pch = x1)
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y)
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 4))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 4,legend = 'hits'))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 4,text = 'hits'))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 4))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key)
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list())
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list('bottomright'))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 1))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 4))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(rows = 4))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(rows = 1))
lattice::xyplot(x3~x2 | x1 ,data= mydata, group = y,auto.key = list(columns = 7))
head(mtcars)
lm(mpg~.,data = mtcars)
mdl <- lm(mpg~.,data = mtcars)
summary(mdl)
anova(mdl)
anova(mdl)[,3] < 7
rownames(anova(mdl)[anova(mdl)[,3] < 7])
rownames(anova(mdl))
c(rownames(anova(mdl)))
rownames(anova(mdl))[[anova(mdl)[,3] < 7]]
rownames(anova(mdl))[[anova(mdl)[,3] < 7][1:10]]
anova(mdl)[,3] < 7[1:10]
anova(mdl)[,3] < 7
anova(mdl)[,3] < 7[-11]
(anova(mdl)[,3] < 7)[-11]
rownames(anova(mdl))[(anova(mdl)[,3] < 7)[-11]]
mdl <- lm(mpg~ cyl + disp + hp + drat + wt + am ,data = mtcars)
summary(mdl)
anova(mdl)
mdl <- lm(mpg~ cyl + wt ,data = mtcars)
summary(mdl)
anova(mdl)
dim(mtcars)
818.71/6.59
mdl <- lm(mpg~ wt ,data = mtcars)
anova(mdl)
mdl <- lm(mpg~ am ,data = mtcars)
anova(mdl)
summary(mdl)
cordata <- cor(mydata)
corrplot::corrplot(cordata)
mdl <- glm(y ~ ., data = mydata, family = poisson(link = 'log'))
summary(mdl)
mdl$null.deviance - mdl$deviance
pchi(mdl$null.deviance - mdl$deviance,2)
pchisq(mdl$null.deviance - mdl$deviance,2)
1 - pchisq(mdl$null.deviance - mdl$deviance,2)
anova(mdl, test = 'chisq')
anova(mdl, test = 'Chisq')
anova(mdl, test = 'LRT')
anova(mdl, test = 'Chisq')
anova(mdl, test = 'LRT')
anova(mdl, test = 'Chisq')
anova(mdl, test = 'LRT')
stat.anova(mdl, test = 'LRT')
anova(mdl, test = 'LRT')
summary(mdl)
anova(mdl, test = 'Chisq')
anova(mdl, test = 'Chisq')
summary(mdl)
anova(mdl, test = 'Chisq')
anova(mdl, test = 'LRT')
anova(mdl, test = 'Chisq')
anova(mdl)
anova(mdl)
anova(mdl, test = 'Chisq')
summary(mdl)
anova(mdl, test = 'LRT')
anova(mdl, test = 'LRT')
summary(mdl)
mdl$deviance
mdl$deviance/26
anova(mdl, test = 'LRT')
LR(mdl)
install.packages('epicalc')
epicalc::lrtest()
lmtest::lrtest(mdl)
1 - pchisq(mdl$null.deviance - mdl$deviance,2)
mdl$null.deviance - mdl$deviance
summary(mdl)
car::vif(mdl)
summary(mdl)
anova(mdl, test = 'Chisq')
summary(mdl)
anova(mdl, test = 'Chisq')
car::vif(mdl)
mdl2 <- glm(y ~ x2, data = mydata, family = poisson(link = 'log'))
summary(mdl2)
1 - pchisq(mdl2$null.deviance - mdl2$deviance,2)
anova(mdl2)
anova(mdl2, test = 'Chisq')
anova(mdl2, test = 'LRT')
car::vif(mdl)
mdl2 <- glm(y ~ x2, data = mydata, family = poisson(link = 'log'))
summary(mdl2)
1 - pchisq(mdl2$null.deviance - mdl2$deviance,2)
anova(mdl2, test = 'Chisq')
anova(mdl2, test = 'LRT')
lmtest::lrtest(mdl2)
24665.51/1939
mdl <- glm(y ~ ., data = mydata, family = quasipoisson(link = 'log'))
summary(mdl)
mdl <- glm(y ~ ., data = mydata, family = poisson(link = 'log'))
summary(mdl)
25.953/26
mdl$deviance/mdl$df.residual
sqrt(mdl$deviance/mdl$df.residual)
mdl <- glm(y ~ ., data = mydata, family = quasipoisson)
summary(mdl)
sd(mydata$y)/mean(mydata$y)
sqrt(sd(mydata$y)/mean(mydata$y))
sqrt(sd(mydata$y)/mean(mydata$y))/26
sd(mydata$y)/mean(mydata$y)/26
mdl
mdl$residuals
residuals.glm(mdl,'deviance')
qqnorm(residuals.glm(mdl,'deviance'))
abline(1)
