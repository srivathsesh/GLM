library(partykit)
install.packages("partykit")
tr <- rpart::rpart(TARGET ~ ., data = winedata.filtered)
library(partykit)
plot(as.party(tr))
plot(partykit::as.party(tr))
tr2 <- rpart::rpart(TARGET ~ ., data = winedata)
plot(partykit::as.party(tr2))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = ifelse(TARGET > 0, 1,0))
tr2 <- rpart::rpart(TARGET ~ ., data = winedata.modified)
plot(partykit::as.party(tr2))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = ifelse(TARGET > 0, 1,0))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified)
plot(partykit::as.party(tr2))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)])
plot(partykit::as.party(tr2))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = ifelse(TARGET > 0, 1,0))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = ifelse(TARGET > 0, 1,0))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
winedata <- read.csv(file = 'wine.csv')
test <- winedata[complete.cases(winedata),]
cordata <- cor(test)
corrplot::corrplot(cordata)
Acidityvars <- c("FixedAcidity", "pH", "VolatileAcidity","AcidIndex","CitricAcid")
test_acid <- test[,Acidityvars]
winedata.filtered <- winedata %>% filter(TARGET > 0 )
tr <- rpart::rpart(TARGET ~ ., data = winedata.filtered)
library(partykit)
plot(partykit::as.party(tr))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = ifelse(TARGET > 0, 1,0))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
tr3 <- randomForest::randomForest(formula = target.dich ~ ., data = winedata.modified[,c(-1,-2)],importance = T)
winedata.modified <- winedata %>% dplyr::mutate(target.dich = ifelse(TARGET > 0, 1,0))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
tr3 <- randomForest::randomForest(formula = target.dich ~ ., data = winedata.modified[,c(-1,-2)],importance = T)
tr3 <- randomForest::randomForest(formula = target.dich ~ ., data = winedata.modified[,c(-1,-2)])
tr3 <- randomForest::randomForest(formula = as.factor(target.dich) ~ ., data = winedata.modified[,c(-1,-2)])
mosaic::favstats(winedata.modified$target.dich)
tr3 <- randomForest::randomForest(formula = as.factor(target.dich) ~ ., data = winedata.modified[,c(-1,-2)], method = "class")
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0, 1,0)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
randomForest::randomForest(target.dich ~ ., data = winedata.modified[,c(-1,-2)])
randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)])
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
tr3$forest
caret::varImp(tr3)
plot(caret::varImp(tr3))
caret::varImp(tr3)
caret::varImp(tr2)
plot(caret::varImp(tr2))
randomForest::varImpPlot(tr3)
plot(partykit::as.party(tr2))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0, 1,0)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
plot(partykit::as.party(tr))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0, 0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
plot(partykit::as.party(TR3))
plot(partykit::as.party(tr2))
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
barplot(target.dich)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
ggplot(mapping = aes(x = target.dich)) + geom_bar()
library(ggplot2)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
ggplot(mapping = aes(x = target.dich)) + geom_bar()
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0, 0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
ggplot(mapping = aes(x = target.dich)) + geom_bar()
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
130/230
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
group_by(target.dich) %>% count()
125/(125+106)
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0, 0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
group_by(target.dich) %>% count()
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5)
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0, 0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
group_by(target.dich) %>% count()
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
group_by(target.dich) %>% mosaic::fav_stats()
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
mosaic::fav_stats(target)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
mosaic::favstats(target)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
mosaic::favstats(target.dich)
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
mosaic::favstats()
winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5) %>%
mosaic::favstats(as.matrix())
test<- winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5)
mosaic::favstats(test)
mosaic::favstats(as.matrix(test))
mosaic::favstats(test)
test$target.dich <- as.integer(test$target.dich)
mosaic::favstats(test)
test<- winedata.modified %>% filter(AcidIndex >= 9.5 & STARS < 1.5)
test$target.dich <- as.integer(test$target.dich)
mosaic::favstats(test)
mosaic::fav_stats(test)
sanitycheck <- do.call(rbind,dfapply(test,favstats, select = is.numeric))
library(mosaic)
sanitycheck <- do.call(rbind,dfapply(test,favstats, select = is.numeric))
sanitycheck
plot(partykit::as.party(tr2))
test<- winedata.modified %>% filter(AcidIndex >= 9.5) %>%
filter(STARS < 1.5)
test$target.dich <- as.integer(test$target.dich)
library(mosaic)
sanitycheck <- do.call(rbind,dfapply(test,favstats, select = is.numeric))
View(sanitycheck)
plot(partykit::as.party(tr2))
winedata.filtered <- winedata %>% filter(TARGET > 0 )
tr <- rpart::rpart(TARGET ~ ., data = winedata.filtered)
library(partykit)
plot(partykit::as.party(tr))
caret::varImp(tr)
Imp <- randomForest::importance(TARGET ~ ., data = winedata.filtered)
Imp <- randomForest::randomForest(TARGET ~ ., data = winedata.filtered, importance = T)
Imp <- randomForest::randomForest(TARGET ~ ., data = winedata.filtered[complete.cases(winedata.filtered),], importance = T)
randomForest::varImpPlot(Imp)
nrow(winedata.modified[winedata.modified$AcidIndex < 9.5,])
nrow(winedata.modified[winedata.modified$AcidIndex >= 9.5 & winedata.modified$STARS < 1.5"15",])
nrow(winedata.modified[winedata.modified$AcidIndex >= 9.5 & winedata.modified$STARS < 1.5,],)
nrow(winedata.modified[winedata.modified$AcidIndex >= 9.5 & winedata.modified$STARS < 1.5, ])
WTF <- winedata.modified[winedata.modified$AcidIndex >= 9.5 & winedata.modified$STARS < 1.5, ]
View(WTF)
nrow(WTF[complete.cases(WTF),])
WTF <- winedata.modified[winedata.modified$AcidIndex >= 9.5 & winedata.modified$STARS < 1.5 & VolatileAcidity >= 0.395, ]
WTF <- winedata.modified[winedata.modified$AcidIndex >= 9.5 & winedata.modified$STARS < 1.5 & winedata.modified$VolatileAcidity >= 0.395, ]
nrow(WTF)
nrow(WTF[complete.cases(WTF),])
write.csv(winedata.modified, file = "winedatamodified.csv")
mean(winedata.filtered$TARGET)
sd(winedata.filtered$TARGET)
mean(winedata$TARGET)
sd(winedata$TARGET)
knitr::opts_chunk$set(echo = TRUE)
winedata <- read.csv(file = 'wine.csv')
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
VIM::mapMiss(winedata)
VIM::mapMiss(winedata.winedata)
VIM::mapMiss(winedata,winedata)
VIM::mapMiss(winedata,winedata[,c("Target","LabelAppeal")])
VIM::mapMiss(winedata,winedata[,c("TARGET","LabelAppeal")])
VIM::mapMiss(winedata$STARS,winedata[,c("TARGET","LabelAppeal")],winedata)
VIM::mapMiss(winedata$STARS,winedata[,c("TARGET","LabelAppeal")])
data(chorizonDL, package = "VIM")
coo <- chorizonDL[, c("XCOO", "YCOO")]
View(coo)
x <- chorizonDL[, c("As", "Bi")]
View(x)
mapMiss(x, coo, kola.background)
VIM::mapMiss(x, coo, kola.background)
VIM::mapMiss(x, coo)
data(kola.background, package = "VIM")
kola.background
VIM::mapMiss(x, coo, kola.background)
Missing.Stars <- ifelse(is.na(winedata$STARS),1,0)
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- ifelse(is.na(winedata$STARS),1,0)
Missing.Alch <- ifelse(is.na(winedata$Alcohol),1,0)
Missing.Sulph <- ifelse(is.na(winedata$Sulphates),1,0)
Missing.pH <- ifelse(is.na(winedata$Sulphates),1,0)
Missing.TSD <- if.else(is.na(winedata$TotalSulfurDioxide),1,0)
Missing.TSD <- ifelse(is.na(winedata$TotalSulfurDioxide),1,0)
Missing.FSD <- if.else(is.na(winedata$FreeSulfurDioxide),1,0)
Missing.FSD <- ifelse(is.na(winedata$FreeSulfurDioxide),1,0)
Missing.Chl <- ifelse(is.na(winedata$Chlorides),1,0)
Missing.ResSug <- ifelse(is.na(winedata$ResidualSugar),1,0)
winedata <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
library(ggplot2)
p <- ggplot(data = winedata)
p + geom_histogram(x = TARGET, col = Missing.Stars, fill = Missing.Stars)
p + geom_histogram(aes(x = TARGET), col = Missing.Stars, fill = Missing.Stars)
p + geom_histogram(aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars))
p + geom_histogram(aes(x = TARGET), col = Missing.Stars, fill = Missing.Stars)
p + geom_histogram(aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars))
ggplot(data = winedata, mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + geom_histogram()
p <- ggplot(data = winedata, mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + geom_histogram(col = Missing.Stars)
p
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
winedata <- read.csv(file = 'wine.csv')
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- ifelse(is.na(winedata$Alcohol),1,0)
Missing.Sulph <- ifelse(is.na(winedata$Sulphates),1,0)
Missing.pH <- ifelse(is.na(winedata$Sulphates),1,0)
Missing.TSD <- ifelse(is.na(winedata$TotalSulfurDioxide),1,0)
Missing.FSD <- ifelse(is.na(winedata$FreeSulfurDioxide),1,0)
Missing.Chl <- ifelse(is.na(winedata$Chlorides),1,0)
Missing.ResSug <- ifelse(is.na(winedata$ResidualSugar),1,0)
winedata <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
library(ggplot2)
p <- ggplot(data = winedata, mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + geom_histogram()
p
p <- ggplot(data = winedata, mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + geom_bar()
p
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedata <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
library(ggplot2)
p <- ggplot(data = winedata)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars))
winedata %>% group_by(TARGET) %>% sum(Missing.Stars)/length(Missing.Stars)
winedata %>% group_by(TARGET) %>% sum(as.numeric(Missing.Stars))/length(Missing.Stars)
winedata %>% group_by(TARGET) %>% length(Missing.Stars)
winedata %>% group_by(TARGET) %>% summarise()
winedata %>% group_by(TARGET) %>% summarise_at(Missing.Stars,function(x) sum(x)/length(x))
winedata %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(x)/length(x))
winedata %>% mutate(Missings.Stars = as.numeric(Missing.Stars)) %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(x)/length(x))
winedata %>% mutate(Missings.Stars = as.numeric(Missing.Stars)) %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(x)/length(x))
winedata %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(as.numeric(x))/length(x))
winedata %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(as.numeric(x))/nrow(x))
winedata %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(as.numeric(x))/nrow(x))
winedata %>% group_by(TARGET) %>% summarise_at("Missing.Stars",function(x) sum(as.numeric(x))/length(x))
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x))
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x))
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
library(ggplot2)
p <- ggplot(data = winedata)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars))
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
p + geom_point(mapping = aes(x = Alcohol, y = TARGET))
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Alch, fill = Missing.Alch))
p + geom_bar(mapping = aes(x = TARGET, col = Missing.ResSug, fill = Missing.ResSug))
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0,0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
test<- winedata.modified %>% filter(AcidIndex >= 9.5) %>%
filter(STARS < 1.5)
test$target.dich <- as.integer(test$target.dich)
library(mosaic)
sanitycheck <- do.call(rbind,dfapply(test,favstats, select = is.numeric))
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
poisson.mdl <- glm(TARGET ~ ., family = poisson(link = 'log'),data = winedata)
poisson.mdl <- glm(TARGET ~ STARS + LabelAppeal + Alchohol, family = poisson(link = 'log'),data = winedata)
poisson.mdl <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata)
summary(poisson.mdl)
predictors <- mosaic::dfapply(winedata, is.numeric)
predictors <- unlist(mosaic::dfapply(winedata, is.numeric))
predictors <- colnames(winedata)[unlist(mosaic::dfapply(winedata, is.numeric))]
predictors
predictors <- colnames(winedata)[unlist(mosaic::dfapply(winedata, is.numeric))][c(-1,-2)]
predictors
paste(predictors, collapse = "+")
predictors <- colnames(winedata)[unlist(mosaic::dfapply(winedata, is.numeric))][-1]
poisson.mld.full <- glm(TARGET ~ ., family = poisson(link = 'log'), data = winedata[,predictors])
summary(poisson.mld.full)
summary(poisson.mdl)
summary(poisson.mld.full)
summary(poisson.mdl)
summary(poisson.mld.full)
lmtest::lrtest(poisson.mdl, poisson.mld.full)
poisson.mdl <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
poisson.mld.full <- glm(TARGET ~ ., family = poisson(link = 'log'), data = winedata[complete.cases(winedata),predictors])
lmtest::lrtest(poisson.mdl, poisson.mld.full)
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0,0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
test<- winedata.modified %>% filter(AcidIndex >= 9.5) %>%
filter(STARS < 1.5)
test$target.dich <- as.integer(test$target.dich)
library(mosaic)
sanitycheck <- do.call(rbind,dfapply(test,favstats, select = is.numeric))
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
winedata.filtered <- winedata %>% filter(TARGET > 0 )
tr <- rpart::rpart(TARGET ~ ., data = winedata.filtered)
library(partykit)
plot(partykit::as.party(tr))
Imp <- randomForest::randomForest(TARGET ~ ., data = winedata.filtered[complete.cases(winedata.filtered),], importance = T)
randomForest::varImpPlot(Imp)
poisson.mdl2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(poisson.mdl, poisson.mld2)
lmtest::lrtest(poisson.mdl, poisson.mld2)
poisson.mdl2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(poisson.mdl, poisson.mld2)
poisson.mdl2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(poisson.mdl, poisson.mdl2)
poisson.mdl2 <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(poisson.mdl, poisson.mdl2)
poisson.mdl2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(poisson.mdl, poisson.mdl2)
broom::glance(poisson.mdl)
broom::glance(c(poisson.mdl, poisson.mdl2))
sapply(c(poisson.mdl, poisson.mdl2),FUN = broom::glance)
sapply(c(poisson.mdl, poisson.mdl2),function(x) broom::glance)
lapply(c(poisson.mdl, poisson.mdl2),function(x) broom::glance)
hmmm <- lapply(c(poisson.mdl, poisson.mdl2),function(x) broom::glance)
library(broom)
do.call(rbind,apply(c(poisson.mdl, poisson.mdl2),2,glance))
do.call(rbind,apply(x = c(poisson.mdl, poisson.mdl2),2,glance))
models <- list(poisson.mdl, poisson.mdl2)
lapply(models,glance)
sapply(models,glance)
models <- list(M1 = poisson.mdl, M2 = poisson.mdl2, M3 = poisson.mld.full)
sapply(models,glance)
plot(poisson.mdl)
plot(poisson.mdl, col = winedata[complete.cases(winedata),TARGET])
plot(poisson.mdl, col = winedata[complete.cases(winedata),'TARGET'])
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
plot(poisson.mdl2, col = winedata[complete.cases(winedata),'TARGET'])
plot(poisson.mdl.full, col = winedata[complete.cases(winedata),'TARGET'])
poisson.mld.full <- glm(TARGET ~ ., family = poisson(link = 'log'), data = winedata[complete.cases(winedata),predictors])
plot(poisson.mdl.full, col = winedata[complete.cases(winedata),'TARGET'])
plot(poisson.mld.full, col = winedata[complete.cases(winedata),'TARGET'])
hist(poisson.mdl$fitted.values)
hist(poisson.mdl$fitted.values)
hist(poisson.mdl2$fitted.values)
nb.mdl <- MASS::glm.nb(ARGET ~ STARS + LabelAppeal + Alcohol,data = winedata[complete.cases(winedata),])
nb.mdl <- MASS::glm.nb(TARGET ~ STARS + LabelAppeal + Alcohol,data = winedata[complete.cases(winedata),])
summary(nb.mdl)
models <- list(M1 = poisson.mdl, M2 = poisson.mdl2, M3 = poisson.mld.full, M4 = nb.mdl)
sapply(models,glance)
predictors <- colnames(winedata)[unlist(mosaic::dfapply(winedata, is.numeric))][-1]
poisson.mdl <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
summary(poisson.mdl)
poisson.mld.full <- glm(TARGET ~ ., family = poisson(link = 'log'), data = winedata[complete.cases(winedata),predictors])
summary(poisson.mld.full)
poisson.mdl2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(poisson.mdl, poisson.mdl2)
plot(poisson.mld.full, col = winedata[complete.cases(winedata),'TARGET'])
hist(poisson.mdl$fitted.values)
hist(poisson.mdl2$fitted.values)
nb.mdl <- MASS::glm.nb(TARGET ~ STARS + LabelAppeal + Alcohol,data = winedata[complete.cases(winedata),])
summary(nb.mdl)
models <- list(M1 = poisson.mdl, M2 = poisson.mdl2, M3 = poisson.mld.full, M4 = nb.mdl)
sapply(models,glance)
lmtest::lrtest(poisson.mdl,nb.mdl)
lmtest::lrtest(poisson.mdl,nb.mdl)
lmtest::lrtest(poisson.mdl,nb.mdl,poisson.mdl2)
lmtest::lrtest(poisson.mdl2,poisson.mdl,nb.mdl)
lmtest::lrtest(poisson.mld.full,poisson.mdl2,poisson.mdl,nb.mdl)
lmtest::lrtest(poisson.mld.full,nb.mdl)
fitted(poisson.mdl)
plot(winedata[complete.cases(winedata),"TARGET"],round(fitted(poisson.mdl))
plot(winedata[complete.cases(winedata),"TARGET"],round(fitted(poisson.mdl))
plot(winedata[complete.cases(winedata),"TARGET"],round(fitted(poisson.mdl),0))
install.packages(“pscl”)
install.packages(“pscl”)
install.packages("pscl")
zif.mdl <- pscl::zeroinfl(TARGET ~ STARS + LabelAppeal + Alcohol,data = winedata[complete.cases(winedata),])
plot(winedata[complete.cases(winedata),"TARGET"],round(fitted(zif.mdl),0))
table(winedata[complete.cases(winedata),"TARGET"],round(fitted(zif.mdl),0))
summary(zif.mdl)
poisson.mdl
poisson.mdl2
lmtest::lrtest(poisson.mdl,poisson.mdl2)
plot(winedata[complete.cases(winedata),"TARGET"],round(fitted(poisson.mdl),0))
plot(winedata[complete.cases(winedata),"TARGET"],round(fitted(poisson.mdl2),0))
zif.mdl <- pscl::zeroinfl(TARGET ~ STARS ,data = winedata[complete.cases(winedata),])
summary(zif.mdl)
AIC(zif.mdl)
sapply(models,glance)
deviance(zif.mdl)
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0,0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
plot(partykit::as.party(tr2))
pscl::hurdle(formula = TARGET ~ STARS + LabelAppeal, family = poisson(link = "log"),
data = winedata[complete.cases(winedata), ])
hmmm <- pscl::hurdle(formula = TARGET ~ STARS + LabelAppeal, family = poisson(link = "log"),
data = winedata[complete.cases(winedata), ])
summary(hmmm)
summary(zif.mdl)
hmmm <- pscl::hurdle(formula = TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = "log"),
data = winedata[complete.cases(winedata), ])
summary(hmmm)
summary(zif.mdl)
zif.mdl <- pscl::zeroinfl(TARGET ~ STARS + LabelAppeal + Alcohol ,data = winedata[complete.cases(winedata),])
summary(zif.mdl)
summary(hmmm)
hmmm$fitted.values
plot(hmmm$fitted.values, hmmm$model$TARGET)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
winedata <- read.csv(file = 'wine.csv')
test <- winedata[complete.cases(winedata),]
cordata <- cor(test)
corrplot::corrplot(cordata)
Acidityvars <- c("FixedAcidity", "pH", "VolatileAcidity","AcidIndex","CitricAcid")
test_acid <- test[,Acidityvars]
winedata.filtered <- winedata %>% filter(TARGET > 0 )
tr <- rpart::rpart(TARGET ~ ., data = winedata.filtered)
library(partykit)
plot(partykit::as.party(tr))
Imp <- randomForest::randomForest(TARGET ~ ., data = winedata.filtered[complete.cases(winedata.filtered),], importance = T)
randomForest::varImpPlot(Imp)
winedata.modified <- winedata %>% dplyr::mutate(target.dich = as.factor(ifelse(TARGET > 0,0,1)))
tr2 <- rpart::rpart(target.dich ~ ., data = winedata.modified[,c(-1,-2)],method = "class")
plot(partykit::as.party(tr2))
library(ggplot2)
test<- winedata.modified %>% filter(AcidIndex >= 9.5) %>%
filter(STARS < 1.5)
test$target.dich <- as.integer(test$target.dich)
library(mosaic)
sanitycheck <- do.call(rbind,dfapply(test,favstats, select = is.numeric))
tr3 <- randomForest::randomForest(target.dich ~ ., data = winedata.modified[complete.cases(winedata.modified),c(-1,-2)], imporance = T)
randomForest::varImpPlot(tr3)
glm(target.dich ~ STARS + AcidIndex, data = winedata.modified, family = binomial(link = "log"))
glm(target.dich ~ STARS + AcidIndex, data = winedata.modified, family = binomial)
hmm <- glm(target.dich ~ STARS + AcidIndex, data = winedata.modified, family = binomial)
trainROC <- pROC::roc(response = winedata.modified$target.dich, predictor = hmm$fitted.values)
trainROC <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)], predictor = hmm$fitted.values)
trainROC <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm$fitted.values)
hmm <- glm(target.dich ~ STARS + AcidIndex, data = winedata.modified[complete.cases(winedata.modified,)], family = binomial)
hmm <- glm(target.dich ~ STARS + AcidIndex, data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm$fitted.values)
plot(trainROC)
pROC::auc(trainROC)
hmm2 <- glm(target.dich ~ STARS, data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC2 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm2$fitted.values)
plot(trainROC)
plot(trainROC2,add = T)
plot(trainROC)
plot(trainROC2,add = T,col = "red")
pROC::auc(trainROC2)
plot(trainROC,asp = NA, legacy.axes = T)
plot(trainROC2,add = T,col = "red",asp = NA, legacy.axes = T )
hist(winedata$FixedAcidity)
hist(winedata$AcidIndex)
summary(hmm)
exp(0.43)
hmm3 <- glm(target.dich ~ STARS + TotalSulfurDioxide , data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
plot(trainROC,asp = NA, legacy.axes = T)
trainROC3 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm3$fitted.values)
plot(trainROC,asp = NA, legacy.axes = T)
plot(trainROC2,add = T,col = "red",asp = NA, legacy.axes = T )
plot(trainROC3,add = T,col = "blue",asp = NA, legacy.axes = T )
pROC::auc(trainROC3)
pROC::auc(trainROC2)
pROC::auc(trainROC)
hmm4 <- glm(target.dich ~ STARS + LabelAppeal , data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC4 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm4$fitted.values)
plot(trainROC4,add = T,col = "green",asp = NA, legacy.axes = T )
hmm4 <- glm(target.dich ~ LabelAppeal , data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC5 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm4$fitted.values)
plot(trainROC,asp = NA, legacy.axes = T)
plot(trainROC2,add = T,col = "red",asp = NA, legacy.axes = T )
plot(trainROC3,add = T,col = "blue",asp = NA, legacy.axes = T )
plot(trainROC4,add = T,col = "green",asp = NA, legacy.axes = T )
hmm5 <- glm(target.dich ~ 1 , data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC5 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm5$fitted.values)
pROC::auc(trainROC5)
hmm6 <- glm(target.dich ~ CitricAcid , data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC6 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm6$fitted.values)
pROC::auc(trainROC6)
hmm7 <- glm(target.dich ~ CitricAcid + STARS , data = winedata.modified[complete.cases(winedata.modified), ], family = binomial)
trainROC7 <- pROC::roc(response = winedata.modified$target.dich[complete.cases(winedata.modified)],predictor = hmm7$fitted.values)
pROC::auc(trainROC7)
training <- winedata.modified %>% dplyr::sample_frac(0.7)
hmm.1 <- glm(target.dich ~ STARS + AcidIndex, data = training[complete.cases(training), ], family = binomial)
trainROC.1 <- pROC::roc(response = training$target.dich[complete.cases(training)],predictor = hmm.1$fitted.values)
pROC::auc(trainROC.1)
