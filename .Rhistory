library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
corrplot::corrplot(cor(MB[complete.cases(MB),cols[-1,-11]]),tl.cex = 0.8)
cols
corrplot::corrplot(cor(MB[complete.cases(MB),cols[c(-1,-11)]],tl.cex = 0.8)
corrplot::corrplot(cor(MB[complete.cases(MB),cols[c(-1,-11)],tl.cex = 0.8))
corrplot::corrplot(cor(MB[,cols[c(-1,-11)]]))
cordata <- MB %>% select(cols[-1,-11])
cordata <- MB %>% select(cols[c(-1,-11)])
View(cordata)
cordata <- MB %>% select(cols[c(-1,-11)]) %>% filter(complete.cases())
cordata <- cordata[complete.cases(cordata),]
corrplot::corrplot(cordata)
corrplot::corrplot(corr(cordata))
corrplot::corrplot(cor(cordata))
corrplot::corrplot(cor(cordata),tl.cex = 0.8)
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Filter)) + geom_point()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, fill = Filter, color = Filter)) + geom_histogram(alpha = 0.5) + facet_grid(Filter ~ .)
MB <- MB %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
MB_test <- MB %>% filter(Filter == F)
ggplot(data = MB_test,mapping = aes(x = TEAM_PITCHING_H, color = Pitch_H_Outlier, fill = Pitch_H_Outlier)) + geom_histogram(alpha = 0.5) + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_SO, y = TEAM_BATTING_SO, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_BB, y = TEAM_BATTING_BB, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
cordata <- MB %>% select(cols[c(-1,-11)])
cordata <- cordata[complete.cases(cordata),]
corrplot::corrplot(cor(cordata),tl.cex = 0.8)
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Filter)) + geom_point()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, fill = Filter, color = Filter)) + geom_histogram(alpha = 0.5) + facet_grid(Filter ~ .)
MB <- MB %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
MB_test <- MB %>% filter(Filter == F)
ggplot(data = MB_test,mapping = aes(x = TEAM_PITCHING_H, color = Pitch_H_Outlier, fill = Pitch_H_Outlier)) + geom_histogram(alpha = 0.5) + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_SO, y = TEAM_BATTING_SO, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_BB, y = TEAM_BATTING_BB, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
caret::findLinearCombos(cordata)
View(cordata)
caret::findLinearCombos(as.matrix(cordata))
x <- as.matrix(cordata)
x
caret::findLinearCombos(x)
do.call(rbind,dfapply(x,favstats, select = is.numeric))
do.call(rbind,dfapply(cordata,favstats, select = is.numeric))
caret::findLinearCombos(cordata)
caret::findLinearCombos(mtcars)
cordata_test <- corrdata %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
cordata_test <- cordata %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
ggplot(data = cordata_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
cordata <- MB %>% select(cols[c(-1,-11)])
cordata <- cordata[complete.cases(cordata),]
corrplot::corrplot(cor(cordata),tl.cex = 0.8)
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Filter)) + geom_point()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, fill = Filter, color = Filter)) + geom_histogram(alpha = 0.5) + facet_grid(Filter ~ .)
MB <- MB %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
MB_test <- MB %>% filter(Filter == F)
ggplot(data = MB_test,mapping = aes(x = TEAM_PITCHING_H, color = Pitch_H_Outlier, fill = Pitch_H_Outlier)) + geom_histogram(alpha = 0.5) + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_SO, y = TEAM_BATTING_SO, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_BB, y = TEAM_BATTING_BB, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
MB <- MB  %>%
mutate(BatHR_Filter = as.logical(ifelse(TEAM_BATTING_HR <= 59, 1,0))) %>%
mutate(BatSO_Filter = as.logical(ifelse(TEAM_BATTING_SO <= 250, 1,0)))
MB$HRSO_Filter <- as.logical(ifelse(rowSums(MB[,c('BatHR_Filter','BatSO_Filter')]) > 0 ,1, 0))
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
cordata <- MB %>% select(cols[c(-1,-11)])
cordata <- cordata[complete.cases(cordata),]
cordata <- MB %>% select(colnames(MB)[c(-1,-11)])
cordata <- cordata[complete.cases(cordata),]
x <- model.matrix(TARGET_WINS ~., data = cordata)
pca <- princomp(x,cor = T)
colnames(MB)
-18:-27
colnames(MB)[c(-1,-2,-11,-18:-27)]
cordata <- MB %>% select(colnames(MB)[c(-1,-2,-11,-18:-27)])
cordata <- cordata[complete.cases(cordata),]
x <- model.matrix(TARGET_WINS ~., data = cordata)
cordata <- MB %>% select(colnames(MB)[c(-1,-11,-18:-27)])
cordata <- cordata[complete.cases(cordata),]
x <- model.matrix(TARGET_WINS ~., data = cordata)
pca <- princomp(x,cor = T)
colnames(cordata)
View(x)
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
pca <- princomp(x,cor = T)
summary(pca)
cumvariance <- cusum(pca$sdev^2) / sum(pca$sdev^2)
cumvariance <- cumsum(pca$sdev^2) / sum(pca$sdev^2)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
pca.scores <- pca$scores
View(pca.scores)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
cordata <- MB %>% select(colnames(MB)[c(-1,-11,-18:-27)])
reqrows <- complete.cases(cordata)
cordata <- cordata[reqrows,]
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
pca <- princomp(x,cor = T)
summary(pca)
cumvariance <- cumsum(pca$sdev^2) / sum(pca$sdev^2)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
pca.scores <- pca$scores[,1:6]
df <- data.frame(pca.scores,cordata$TARGET_WINS)
df <- data.frame(pca.scores,cordata$TARGET_WINS,MB[reqrows,-18:-27])
df <- data.frame(pca.scores,cordata$TARGET_WINS,MB[reqrows,c(-1,-11,-18:-27)])
df <- data.frame(pca.scores,MB[reqrows,c(-1,-11,-18:-27)])
rdata$TARGET_WINS
df <- data.frame(pca.scores,cordata$TARGET_WINS,MB[reqrows,c(-1,-11,-18:-27)])
plot(df$cordata.TARGET_WINS,df$TARGET_WINS)
df <- data.frame(pca.scores,MB[reqrows,c(-1,-11,-18:-27)])
library(MASS)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(uppler.lm), lower = ~1), direction = "both", trace = F)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(uppler.lm), lower = ~1), direction = "both", trace = F)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ TEAM_BATTING_H)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
plot(step.lm)
summary(step.lm)
lower.lm <- lm(data = df, formula = TARGET_WINS ~1)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
plot(step.lm)
vif(step.lm)
car::vif(step.lm)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
plot(step.lm)
summary(step.lm)
plot(step.lm)
car::vif(step.lm)
head(MB[reqrows,c(-1,-11,-18:-27)])
df <- data.frame(pca.scores,MB[reqrows,c(-1,-11,18:27)])
colnames(MB)[c(18:27)]
cordata <- MB %>% select(colnames(MB)[c(-1,-11,-18:-27)])
cordata <- MB %>% select(colnames(MB)[c(-1,-11,-18:-27)])
colnames(MB)[c(-1,-11,-18:-27)]
MB %>% select(colnames(MB)[c(-1,-11,-18:-27)])
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
cordata <- MB %>% select(cols[c(-1,-11)])
cordata <- MB %>% select(colnames(MB)[c(-1,-11,-18:-27)])
colnames(MB)[c(-1,-11,-18:-27)]
reqcols <- colnames(MB)[c(-1,-11,-18:-27)]
cordata <- MB %>% select(reqcols)
cordata <- MB %>% dplyr::select(reqcols)
reqrows <- complete.cases(cordata)
cordata <- cordata[reqrows,]
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
pca <- princomp(x,cor = T)
summary(pca)
cumvariance <- cumsum(pca$sdev^2) / sum(pca$sdev^2)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
pca.scores <- pca$scores[,1:6]
df <- data.frame(pca.scores,MB[reqrows,c(,18:27)])
df <- data.frame(pca.scores,MB[reqrows,colnames(MB)[c(18:27)]])
library(MASS)
df <- data.frame(pca.scores,MB[reqrows,colnames(MB)[c(18:27)]])
colnames(MB)[c(18:27)]
colnames(MB)[c(18:23)]
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
cordata <- MB %>% select(cols[c(-1,-11)])
MB <- MB  %>%
mutate(BatHR_Filter = as.logical(ifelse(TEAM_BATTING_HR <= 59, 1,0))) %>%
mutate(BatSO_Filter = as.logical(ifelse(TEAM_BATTING_SO <= 250, 1,0)))
MB$HRSO_Filter <- as.logical(ifelse(rowSums(MB[,c('BatHR_Filter','BatSO_Filter')]) > 0 ,1, 0))
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Filter)) + geom_point()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, fill = Filter, color = Filter)) + geom_histogram(alpha = 0.5) + facet_grid(Filter ~ .)
MB <- MB %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
MB_test <- MB %>% filter(Filter == F)
ggplot(data = MB_test,mapping = aes(x = TEAM_PITCHING_H, color = Pitch_H_Outlier, fill = Pitch_H_Outlier)) + geom_histogram(alpha = 0.5) + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_SO, y = TEAM_BATTING_SO, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_BB, y = TEAM_BATTING_BB, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
MB <- MB  %>%
mutate(BatHR_Filter = as.logical(ifelse(TEAM_BATTING_HR <= 59, 1,0))) %>%
mutate(BatSO_Filter = as.logical(ifelse(TEAM_BATTING_SO <= 250, 1,0)))
MB$HRSO_Filter <- as.logical(ifelse(rowSums(MB[,c('BatHR_Filter','BatSO_Filter')]) > 0 ,1, 0))
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
cordata <- MB %>% select(cols[c(-1,-11)])
cordata <- cordata[complete.cases(cordata),]
corrplot::corrplot(cor(cordata),tl.cex = 0.8)
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Filter)) + geom_point()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, fill = Filter, color = Filter)) + geom_histogram(alpha = 0.5) + facet_grid(Filter ~ .)
MB <- MB %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
MB_test <- MB %>% filter(Filter == F)
ggplot(data = MB_test,mapping = aes(x = TEAM_PITCHING_H, color = Pitch_H_Outlier, fill = Pitch_H_Outlier)) + geom_histogram(alpha = 0.5) + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_SO, y = TEAM_BATTING_SO, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_BB, y = TEAM_BATTING_BB, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
MB <- MB  %>%
mutate(BatHR_Filter = as.logical(ifelse(TEAM_BATTING_HR <= 59, 1,0))) %>%
mutate(BatSO_Filter = as.logical(ifelse(TEAM_BATTING_SO <= 250, 1,0)))
MB$HRSO_Filter <- as.logical(ifelse(rowSums(MB[,c('BatHR_Filter','BatSO_Filter')]) > 0 ,1, 0))
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
reqcols <- colnames(MB)[c(-1,-11,-18:-23)]
reqcols <- colnames(MB)[c(-1,-11,-18:-27)]
cordata <- MB %>% dplyr::select(reqcols)
reqrows <- complete.cases(cordata)
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
pca <- princomp(x,cor = T)
summary(pca)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
cumvariance <- cumsum(pca$sdev^2) / sum(pca$sdev^2)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
pca.scores <- pca$scores[,1:9]
colnames(MB)[c(18:27)]
df <- data.frame(pca.scores,MB[reqrows,colnames(MB)[c(24)]])
library(MASS)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6)
df <- data.frame(pca.scores,MB[reqrows,colnames(MB)[c(2,24)]])
library(MASS)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
plot(step.lm)
car::vif(step.lm)
summary(step.lm)
anova(step.lm)
library(caret)
caret::findLinearCombos(x)
x
hmm <- caret::findLinearCombos(x)
hmm$linearCombos
hmm$linearCombos
testData1 <- matrix(0, nrow=20, ncol=8)
testData1[,1] <- 1
testData1[,2] <- round(rnorm(20), 1)
testData1[,3] <- round(rnorm(20), 1)
testData1[,4] <- round(rnorm(20), 1)
testData1[,5] <- 0.5 * testData1[,2] - 0.25 * testData1[,3] - 0.25 * testData1[,4]
testData1[1:4,6] <- 1
testData1[5:10,7] <- 1
testData1[11:20,8] <- 1
findLinearCombos(testData1)
mtcars
findLinearCombos(mtcars)
findLinearCombos(iris3)
findLinearCombos(mtcars[,4:7])
hmmm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6 + Comp.7 + Pitch_H_Outlier)
summary(hmmm)
hmmm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6 + Comp.7 + Pitch_H_Outlier + Comp.8 + Comp.9)
summary(hmmm)
summary(step.lm)
colnames(MB)
reqcols
library(glmnet)
install.packages('glmnet')
packrat::bundle(file = '~/Documents/MSPA/PREDICT 411/RegressionGLM/Untitled.tar.gz.tar.tar.gz', overwrite = TRUE)
grid = 10^seq(10,-2,length = 100)
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 0, lambda = grid)
library(glmnet)
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 0, lambda = grid)
ridge.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 0)
plot(ridge.out)
ridge.out$lambda.min
log(ridge.out$lambda.min)
summary(ridge.out)
plot(ridge.mod)
summary(ridge.mod)
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 0, lambda =ridge.out$lambda.min)
ridge.mod$dev.ratio
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 0, lambda =2)
ridge.mod$dev.ratio
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 0, lambda =20)
ridge.mod$dev.ratio
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 0, lambda =100)
ridge.mod$dev.ratio
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda =ridge.out$lambda.min)
ridge.mod$dev.ratio
ridge.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(ridge.out)
ridge.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda =ridge.out$lambda.min)
ridge.mod$dev.ratio
coef(ridge.mod)
round(coef(ridge.mod),3)
order(abs(round(coef(ridge.mod),3)),decreasing = T)
coef(ridge.mod)[order(abs(round(coef(ridge.mod),3)),decreasing = T)]
coef(ridge.mod)[order(abs(round(coef(ridge.mod),3)),decreasing = T),]
hist(cordata$TEAM_BATTING_HR)
hist(cordata$TEAM_BATTING_SO)
impmodel <- lm(TEAM_FIELDING_DP ~ TEAM_BASERUN_SB + TEAM_BASERUN_CS, data = cordata)
summary(impmodel)
impmodel <- lm(TEAM_FIELDING_DP ~ ., data = cordata)
summary(impmodel)
impmodel <- lm(TEAM_FIELDING_DP ~ TEAM_BASERUN_SB + TEAM_BATTING_2B + TEAM_FIELDING_E, data = cordata)
summary(impmodel)
impmodel <- stepAIC(impmodel, scope = list(upper = TEAM_FIELDING_DP ~ ., lower = TEAM_FIELDING_DP ~ 1), direction = 'both')
impmodel
summary(impmodel)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),]
car::vif(lasso.mod)
lasso.mod$dev.ratio
install.packages('VIM')
library(VIM)
colnames(MB)
MB2 <- kNN(data = MB,variable = colnames(MB)[-1,-11,-18:-27], k = 5 )
colnames(MB)[-1,-11,-18:-27]
MB2 <- kNN(data = MB,variable = colnames(MB)[c(-1,-11,-18:-27)], k = 5 )
sanitycheck2 <- do.call(rbind,dfapply(MB2,favstats, select = is.numeric))
View(sanitycheck2)
rownames(sanitycheck2)
MB2 <- MB2 %>% select(rownames(sanitycheck2))
MB2 <- MB2 %>% subset(select = rownames(sanitycheck2))
MB2 <- MB2[,c(-1,-11)]
x1 <- model.matrix(TEAM_WINS ~ ., data = MB2)
x1 <- model.matrix(TARGET_WINS ~ ., data = MB2)
pca2 <- princomp(x1,cor = T)
cumvariance2 <- cumsum(pca2$sdev^2) / sum(pca2$sdev^2)
plot(cumvariance2, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance2)
df2 <- data.frame(pca2.scores,MB2$TARGET_WINS)
pca2.scores <- pca2$scores[,1:9]
df2 <- data.frame(pca2.scores,MB2$TARGET_WINS)
colnames(df2)[10] <- 'TARGET_WINS'
lower2.lm <- lm(data = df2, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6)
upper2.lm <- lm(data = df2, formula = TARGET_WINS ~ .)
step2.lm <- stepAIC(lower2.lm, scope = list(upper = formula(upper2.lm), lower = ~1), direction = "both", trace = F)
summary(step2.lm)
anova(step2.lm)
lower2.lm <- lm(data = df2, formula = TARGET_WINS ~ 1)
upper2.lm <- lm(data = df2, formula = TARGET_WINS ~ .)
step2.lm <- stepAIC(lower2.lm, scope = list(upper = formula(upper2.lm), lower = ~1), direction = "both", trace = F)
summary(step2.lm)
anova(step2.lm)
plot(step2.lm)
