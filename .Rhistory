model3a <- lm(data = GPA, formula = GPA ~ HS_ENGL)
coefs_3a <- round(coefficients(model3a),2)
signs_3a <- ifelse(sign(coefs_3a)==1,"+", "-")
Betas_3a <- paste(abs(coefs_3a[2:length(coefs_3a)]),"*",'SAT_QUANT')
modwl3aeqn <- paste("GPA = ",paste(coefs_3a[1],paste(paste(signs_3a[2:2], Betas_3a),collapse = " ")))
modwl3adata <- broom::augment(model3a)
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm')
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm',se = F)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F)
correlations <- cor(GPA)
corrplot::corrplot(GPA)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F)
correlations <- cor(GPA)
corrplot::corrplot(correlations)
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F)
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
# read data in
GPA <- readr::read_csv(file = 'gpa.csv')
GPA1 <- head(GPA,8)
# GPA1 <- GPA1[c(-2,-5),] # To show that observations 2 and 5 are influential points
library(ggplot2)
ggplot(data = GPA1, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
# Model for question b
model1.lm <- lm(data = GPA1, formula = GPA ~ SAT_QUAN)
coefs <- round(coefficients(model1.lm),2)
signs <- ifelse(sign(coefs)==1,"+", "-")
Betas <- paste(abs(coefs[2:length(coefs)]),"*",'SAT_QUANT')
model1eqn <- paste("GPA = ",paste(coefs[1],paste(paste(signs[2:2], Betas),collapse = " ")))
model1data <- broom::augment(model1.lm)
df <- model1data[,c('GPA','SAT_QUAN','.fitted','.resid')]
knitr::kable(df,caption = "Predicted values and residuals")
z <- anova(model1.lm)
SSE <- z$`Sum Sq`[2]
ggplot(data = model1data, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_bw()
ggplot(data = GPA, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
model2.lm <- lm(data = GPA, formula = GPA ~ SAT_QUAN)
coefs_2 <- round(coefficients(model2.lm),2)
signs_2 <- ifelse(sign(coefs_2)==1,"+", "-")
Betas_2 <- paste(abs(coefs_2[2:length(coefs_2)]),"*",'SAT_QUANT')
model2eqn <- paste("GPA = ",paste(coefs_2[1],paste(paste(signs_2[2:2], Betas_2),collapse = " ")))
model2data <- broom::augment(model2.lm)
summary(model2.lm)
anova(model2.lm)
z2 <- anova(model2.lm)
SSE2 <- z2$`Sum Sq`[2]
MSE2 <- SSE2/nrow(model2data)
modelcomparison <- data.frame(Question = c(1,2),model = c(model1eqn, model2eqn), RSquared = c(mosaic::rsquared(model1.lm),mosaic::rsquared(model2.lm)), MSE = c(SSE/nrow(GPA1), MSE2),First_8obs_MSE = c(SSE/nrow(GPA1), sum(model2data$.resid[8]^2)/8) )
par(mfrow = c(1,2))
qqnorm(y=model2.lm$residuals)
qqline(y=model2.lm$residuals)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals')
pander::pandoc.table(modelcomparison,caption = "Model comparison")
model3a <- lm(data = GPA, formula = GPA ~ HS_ENGL)
coefs_3a <- round(coefficients(model3a),2)
signs_3a <- ifelse(sign(coefs_3a)==1,"+", "-")
Betas_3a <- paste(abs(coefs_3a[2:length(coefs_3a)]),"*",'HS_ENGL')
model3aeqn <- paste("GPA = ",paste(coefs_3a[1],paste(paste(signs_3a[2:2], Betas_3a),collapse = " ")))
model3adata <- broom::augment(model3a)
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm',se = F)
summary(model3a)
anova(model3a)
correlations <- cor(GPA)
corrplot::corrplot(correlations)
ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F)
library(gridExtra)
grid.arrange(p,p2, ncol - 2)
p <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
p2 <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
library(gridExtra)
grid.arrange(p,p2, ncol - 2)
grid.arrange(p,p2, ncol = 2)
corrplot::corrplot(correlations,cex = 1)
corrplot::corrplot(correlations,cex = 1)
corrplot::corrplot(correlations,tl.cex = 5)
corrplot::corrplot(correlations,tl.cex = 0.2)
corrplot::corrplot(correlations,tl.cex = 0.1)
corrplot::corrplot(correlations,tl.cex = 1)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
summary(model3b)
anova(model3b)
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("SalePrice = ",paste(coefs3b[1],paste(paste(signs3b[2:24], Betas3b),collapse = " ")))
model3beqn
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs[2:length(coefs3b)]),"*",Predictors)
coefs3b
signs3b
Betas3b
coefs3b
paste(abs(coefs[2:length(coefs3b)]),"*",Predictors)
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("SalePrice = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
model3beqn
summary(model3b)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
summary(model3b)
anova(model3b)
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("SalePrice = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
model3beqn
car::vif(model3b)
summary(model3b)
anova(model3b)
par(mfrow=c(2,2))
ggplot(data = model3bdata, mapping = aes(x = GPA, y = .resid)) + geom_point() + theme_bw()
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
ggplot(data = model3bdata, mapping = aes(x = HS_ENGL, y = .resid)) + geom_point() + theme_bw()
ggplot(data = model3bdata, mapping = aes(x = SAT_VERB, y = .resid)) + geom_point() + theme_bw()
summary(model3b)
anova(model3b)
par(mfrow=c(2,2))
ggplot(data = model3bdata, mapping = aes(x = GPA, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
ggplot(data = model3bdata, mapping = aes(x = HS_ENGL, y = .resid)) + geom_point() + theme_bw()
ggplot(data = model3bdata, mapping = aes(x = SAT_VERB, y = .resid)) + geom_point() + theme_bw()
summary(model3b)
anova(model3b)
par(mfrow=c(2,2))
ggplot(data = model3bdata, mapping = aes(x = GPA, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
ggplot(data = model3bdata, mapping = aes(x = HS_ENGL, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
ggplot(data = model3bdata, mapping = aes(x = SAT_VERB, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
p <- qqnorm(model3bdata$.resid) %>%
qqline(model3bdata$.resid)
library(magrittr)
p <- qqnorm(model3bdata$.resid) %>%
qqline(model3bdata$.resid)
p <- qqnorm(model3bdata$.resid)
p <- qqline(model3bdata$.resid)
df <- data.frame(y = rt(200, df = 5))
p <- ggplot(df, aes(sample = y))
p + stat_qq()
p + geom_point(stat = "qq")
p <- qqnorm(model3bdata$.resid) ; qqline(model3bdata$.resid)
p
print(p)
plot(p)
qqnorm(model3bdata$.resid) ; qqline(model3bdata$.resid)
qqnorm(model3bdata$.resid) ; qqline(model3bdata$.resid)
summary(model3b)
anova(model3b)
par(mfrow = c(2,2))
ggplot(data = model3bdata, mapping = aes(x = GPA, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
qqnorm(model3bdata$.resid) ; qqline(model3bdata$.resid)
ggplot(data = model3bdata, mapping = aes(x = HS_ENGL, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
ggplot(data = model3bdata, mapping = aes(x = SAT_VERB, y = .resid)) + geom_point() + theme_bw() + geom_smooth(method = 'lm', se = F)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals')
abline(model2.lm)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',abline(model2.lm))
xyplot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type = c(“p”, “r”))
xyplot(model2.lm, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type = c(“p”, “r”))
xyplot(model2.lm, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
plot(model2.lm, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
xyplot(model2.lm, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
xyplot(GPA~H_ENGL,data = GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
lattice::xyplot(GPA~H_ENGL,data = GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
lattice::xyplot(GPA~HS_ENGL,data = GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
lattice::xyplot(GPA~HS_ENGL,data = GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals',type =c("p","r"))
lattice::xyplot(GPA~HS_ENGL,data = GPA,type =c("p","r"))
lattice::xyplot(GPA~.resid,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
summary(model3b)
anova(model3b)
par(mfrow = c(2,2))
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERBAL,data = model3bdata,type =c("p","r"))
summary(model3b)
anova(model3b)
par(mfrow = c(2,2))
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
summary(model3b)
anova(model3b)
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
qqnorm(model3bdata$.resid)#qqline(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
qqnorm(model3bdata$.resid)#qqline(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
model3c <- lm(GPA~HS_ENGL + SAT_VERB + SAT_QUAN, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB','SAT_QUAN')
model3cdata <- broom::augment(model3c)
coefs3c <- round(coefficients(model3c),2)
signs3c <- ifelse(sign(coefs3c)==1,"+", "-")
Betas3c <- paste(abs(coefs3c[2:length(coefs3c)]),"*",Predictors)
model3ceqn <- paste("SalePrice = ",paste(coefs3c[1],paste(paste(signs3c[2:length(signs3c)], Betas3c),collapse = " ")))
summary(model3c)
summary(model3b)
summary(model3c)
summary(model3c)
anova(model3c)
summary(model3c)
anova(model3c)
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
summary(model3c)
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
# read data in
GPA <- readr::read_csv(file = 'gpa.csv')
GPA1 <- head(GPA,8)
# GPA1 <- GPA1[c(-2,-5),] # To show that observations 2 and 5 are influential points
library(ggplot2)
ggplot(data = GPA1, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
# Model for question b
model1.lm <- lm(data = GPA1, formula = GPA ~ SAT_QUAN)
coefs <- round(coefficients(model1.lm),2)
signs <- ifelse(sign(coefs)==1,"+", "-")
Betas <- paste(abs(coefs[2:length(coefs)]),"*",'SAT_QUANT')
model1eqn <- paste("GPA = ",paste(coefs[1],paste(paste(signs[2:2], Betas),collapse = " ")))
model1data <- broom::augment(model1.lm)
df <- model1data[,c('GPA','SAT_QUAN','.fitted','.resid')]
knitr::kable(df,caption = "Predicted values and residuals")
z <- anova(model1.lm)
SSE <- z$`Sum Sq`[2]
ggplot(data = model1data, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_bw()
ggplot(data = GPA, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
model2.lm <- lm(data = GPA, formula = GPA ~ SAT_QUAN)
coefs_2 <- round(coefficients(model2.lm),2)
signs_2 <- ifelse(sign(coefs_2)==1,"+", "-")
Betas_2 <- paste(abs(coefs_2[2:length(coefs_2)]),"*",'SAT_QUANT')
model2eqn <- paste("GPA = ",paste(coefs_2[1],paste(paste(signs_2[2:2], Betas_2),collapse = " ")))
model2data <- broom::augment(model2.lm)
summary(model2.lm)
anova(model2.lm)
z2 <- anova(model2.lm)
SSE2 <- z2$`Sum Sq`[2]
MSE2 <- SSE2/nrow(model2data)
modelcomparison <- data.frame(Question = c(1,2),model = c(model1eqn, model2eqn), RSquared = c(mosaic::rsquared(model1.lm),mosaic::rsquared(model2.lm)), MSE = c(SSE/nrow(GPA1), MSE2),First_8obs_MSE = c(SSE/nrow(GPA1), sum(model2data$.resid[8]^2)/8) )
par(mfrow = c(1,2))
qqnorm(y=model2.lm$residuals)
qqline(y=model2.lm$residuals)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals')
pander::pandoc.table(modelcomparison,caption = "Model comparison")
model3a <- lm(data = GPA, formula = GPA ~ HS_ENGL)
coefs_3a <- round(coefficients(model3a),2)
signs_3a <- ifelse(sign(coefs_3a)==1,"+", "-")
Betas_3a <- paste(abs(coefs_3a[2:length(coefs_3a)]),"*",'HS_ENGL')
model3aeqn <- paste("GPA = ",paste(coefs_3a[1],paste(paste(signs_3a[2:2], Betas_3a),collapse = " ")))
model3adata <- broom::augment(model3a)
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm',se = F)
summary(model3a)
anova(model3a)
correlations <- cor(GPA)
corrplot::corrplot(correlations,tl.cex = 1)
p <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
p2 <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
library(gridExtra)
grid.arrange(p,p2, ncol = 2)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("SalePrice = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
summary(model3b)
anova(model3b)
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
model3c <- lm(GPA~HS_ENGL + SAT_VERB + SAT_QUAN, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB','SAT_QUAN')
model3cdata <- broom::augment(model3c)
coefs3c <- round(coefficients(model3c),2)
signs3c <- ifelse(sign(coefs3c)==1,"+", "-")
Betas3c <- paste(abs(coefs3c[2:length(coefs3c)]),"*",Predictors)
model3ceqn <- paste("SalePrice = ",paste(coefs3c[1],paste(paste(signs3c[2:length(signs3c)], Betas3c),collapse = " ")))
summary(model3c)
summary(model3c)
anova(model3c)
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p","r"))
qqnorm(model3cdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
summary(model3c)
anova(model3c)
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(model3cdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
qqnorm(model3cdata$.resid)
qqline(model3cdata$.resid)
qqnorm(model3cdata$.resid)
qqline(y = model3cdata$.resid)
qqnorm(model3c$residuals)
qqline(model3c$residuals)
qqline(y = model3c$residuals)
qqnorm(model3c$residuals)
qqline(y = model3c$residuals)
summary(model3c)
anova(model3c)
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals)
qqline(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals); qqline(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layoutm <- matrix(c(1,2,3,4,5,5), byrow = T, ncol = 2)
layout(layoutm)
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
# read data in
GPA <- readr::read_csv(file = 'gpa.csv')
GPA1 <- head(GPA,8)
# GPA1 <- GPA1[c(-2,-5),] # To show that observations 2 and 5 are influential points
library(ggplot2)
ggplot(data = GPA1, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
# Model for question b
model1.lm <- lm(data = GPA1, formula = GPA ~ SAT_QUAN)
coefs <- round(coefficients(model1.lm),2)
signs <- ifelse(sign(coefs)==1,"+", "-")
Betas <- paste(abs(coefs[2:length(coefs)]),"*",'SAT_QUANT')
model1eqn <- paste("GPA = ",paste(coefs[1],paste(paste(signs[2:2], Betas),collapse = " ")))
model1data <- broom::augment(model1.lm)
df <- model1data[,c('GPA','SAT_QUAN','.fitted','.resid')]
knitr::kable(df,caption = "Predicted values and residuals")
z <- anova(model1.lm)
SSE <- z$`Sum Sq`[2]
ggplot(data = model1data, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_bw()
ggplot(data = GPA, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
model2.lm <- lm(data = GPA, formula = GPA ~ SAT_QUAN)
coefs_2 <- round(coefficients(model2.lm),2)
signs_2 <- ifelse(sign(coefs_2)==1,"+", "-")
Betas_2 <- paste(abs(coefs_2[2:length(coefs_2)]),"*",'SAT_QUANT')
model2eqn <- paste("GPA = ",paste(coefs_2[1],paste(paste(signs_2[2:2], Betas_2),collapse = " ")))
model2data <- broom::augment(model2.lm)
summary(model2.lm)
anova(model2.lm)
z2 <- anova(model2.lm)
SSE2 <- z2$`Sum Sq`[2]
MSE2 <- SSE2/nrow(model2data)
modelcomparison <- data.frame(Question = c(1,2),model = c(model1eqn, model2eqn), RSquared = c(mosaic::rsquared(model1.lm),mosaic::rsquared(model2.lm)), MSE = c(SSE/nrow(GPA1), MSE2),First_8obs_MSE = c(SSE/nrow(GPA1), sum(model2data$.resid[8]^2)/8) )
par(mfrow = c(1,2))
qqnorm(y=model2.lm$residuals)
qqline(y=model2.lm$residuals)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals')
pander::pandoc.table(modelcomparison,caption = "Model comparison")
model3a <- lm(data = GPA, formula = GPA ~ HS_ENGL)
coefs_3a <- round(coefficients(model3a),2)
signs_3a <- ifelse(sign(coefs_3a)==1,"+", "-")
Betas_3a <- paste(abs(coefs_3a[2:length(coefs_3a)]),"*",'HS_ENGL')
model3aeqn <- paste("GPA = ",paste(coefs_3a[1],paste(paste(signs_3a[2:2], Betas_3a),collapse = " ")))
model3adata <- broom::augment(model3a)
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm',se = F)
summary(model3a)
anova(model3a)
correlations <- cor(GPA)
corrplot::corrplot(correlations,tl.cex = 1)
p <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
p2 <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
library(gridExtra)
grid.arrange(p,p2, ncol = 2)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("SalePrice = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
summary(model3b)
anova(model3b)
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
plot.new()
qqnorm(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
model3c <- lm(GPA~HS_ENGL + SAT_VERB + SAT_QUAN, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB','SAT_QUAN')
model3cdata <- broom::augment(model3c)
coefs3c <- round(coefficients(model3c),2)
signs3c <- ifelse(sign(coefs3c)==1,"+", "-")
Betas3c <- paste(abs(coefs3c[2:length(coefs3c)]),"*",Predictors)
model3ceqn <- paste("SalePrice = ",paste(coefs3c[1],paste(paste(signs3c[2:length(signs3c)], Betas3c),collapse = " ")))
summary(model3c)
anova(model3c)
layout(layoutm)
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layoutm
library(lattice)
layout(layoutm)
xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
plot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
plot(model3c)
# lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
# qqnorm(y = model3c$residuals)
# lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layout(layoutm)
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
# lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
# qqnorm(y = model3c$residuals)
# lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layout(layoutm)
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
layout(matrix(c(1,2,3,4),byrow = 2, nrow = 2, ncol = 2))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
plot(x = model3bdata$GPA, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$SAT_VERB, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$HS_ENGL, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
# lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
# plot.new()
# qqnorm(model3bdata$.resid)
# lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
# layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
layout(matrix(c(1,2,3,4,5,5),byrow = 2, nrow = 2, ncol = 2))
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
matrix(c(1,2,3,4,5,5),byrow = 2, nrow = 2, ncol = 2)
matrix(c(1,2,3,4,5,5),byrow = 3, nrow = 2, ncol = 2)
matrix(c(1,2,3,4,5,5),byrow = 3, nrow = 2, ncol = 2)
matrix(c(1,2,3,4,5,5),byrow = T, nrow = 3, ncol = 2)
layout(matrix(c(1,2,3,4,5,5),byrow = T, nrow = 3, ncol = 2))
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$.fitted, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
plot(model3cdata$.hat)
8/nrow(GPA)
plot(model3c)
influence.measures(model3c)
rstudent(model3c)
plot(rstudent(model3c))
