Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedata <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
write.csv(file = 'winedatamod.csv', winedata)
write.csv2(file = 'winedatamod.csv', winedata)
write.csv(file = 'winedatamod.csv', winedata)
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
library(ggplot2)
p <- ggplot(data = winedata)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.ResSug, fill = Missing.ResSug))
winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Star, fill = Missing.Stars)) + theme_classic()
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Star, fill = Missing.Star)) + theme_classic()
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Star, fill = Missing.Star)) + theme_classic()
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
windedataMelt <- melt(winedata)
windedataMelt <- reshape2::melt(winedata)
View(windedataMelt)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable)
ggplot(data = windedataMelt[complete.cases(windedataMelt),],mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable)
histogram(winedata[,-1])
ggplot(data = windedataMelt[complete.cases(windedataMelt),],mapping = aes(x = value)) + geom_histogram() + facet_grid(~variable)
ggplot(data = windedataMelt[complete.cases(windedataMelt),],mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = c("free_x","free_y"))
ggplot(data = windedataMelt[complete.cases(windedataMelt),],mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x")
ggplot(data = windedataMelt[complete.cases(windedataMelt),],mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata)
View(cordata)
winedata <- winedata %>% mutate(TARGET0 <- ifelse(TARGET > 0 ,0, 1))
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata)
winedata <- winedata %>% mutate(TARGET0 <- ifelse(TARGET > 0 ,0, 1))
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 <- ifelse(TARGET > 0 ,0, 1))
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 <- ifelse(TARGET > 0 ,0, 1))
predictors <- colnames(winedata)[c(-1,-2,-17)]
predictors
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[1])], method = "class")
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[1])], method = "class")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[1])], method = "class")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
response[2]
c(predictors, response[2])
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = ifelse(TARGET > 0 ,0, 1))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
plot(partykit::as.party(tr))
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.facor(ifelse(TARGET > 0 ,0, 1)))
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
plot(partykit::as.party(tr))
plot(partykit::as.party(tr), cex = 0.7)
plot(partykit::as.party(tr), tl.cex = 0.7)
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], importance = T)
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr)
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
plot(partykit::as.party(tr), tl.cex = 0.7)
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr)
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class".mtry = 14)
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T, mtry = 14)
randomForest::varImpPlot(randtr)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
plot(partykit::as.party(tr), gp = gpar(fontsize = 6 ))
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 6 ))
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
tr2 <- rpart::rpart(formula = TARGET ~ ., data = winedata[,c(predictors, response[1])])
plot(as.party(tr2))
tr2 <- rpart::rpart(formula = TARGET ~ ., data = winedata[TARGET0 < 1,c(predictors, response[1])])
tr2 <- rpart::rpart(formula = TARGET ~ ., data = winedata[winedata$TARGET0 < 1,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 6))
plot(as.party(tr2),gp = gpar(fontsize = 6))
tr2 <- rpart::rpart(formula = TARGET ~ ., data = winedata[winedata$TARGET0 < 1,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 6))
plot(winedata$TARGET0)
plot(as.party(tr2))
plot(tr2)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = winedata[,c(predictors, response[1])])
plot(as.party(tr2))
plot(winedata$TARGET0)
windedata.filtered <- winedata %>% filter(TARGET0 < 1)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = winedata.filtered[,c(predictors, response[1])])
windedata.filtered <- winedata %>% filter(TARGET0 < 1)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2))
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2))
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])], importance = T)
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
randtr2$forest$ndbigtree
randomForest:::plot.randomForest(randtr2)
randomForest::getTree(randtr2)
plot(randomForest::getTree(randtr2))
plot(as.party(randtr2))
trdf <- randomForest::getTree(randtr2)
class(trdf)
plot(as.party(trdf))
install.packages("reprtree")
View(windedata.filtered)
train <- winedata <- dplyr::sample_frac(0.75)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
hist(train$TARGET)
hist(test$TARGET)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET")
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
nrow(train) + nrow(test) - nrow(winedata)
nrow(winedata)
nrow(winedata)*0.75
test <- winedata[-train,]
test <- winedata[-train]
test <- winedata[!winedata$INDEX %in% train$INDEX,]
nrow(train) + nrow(test) - nrow(winedata)
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
predictors <- colnames(winedata)[unlist(mosaic::dfapply(winedata, is.numeric))][-1]
predictors
poisson.mld.full <- glm(TARGET ~ ., family = poisson(link = 'log'), data = winedata[complete.cases(winedata),predictors])
summary(poisson.mld.full)
poisson.mdl <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
(deviance(poisson.mld.full) - deviance(poisson.mdl))/deviance(poisson.mld.full)
abs(deviance(poisson.mld.full) - deviance(poisson.mdl))/deviance(poisson.mdl)
1 - ((log(logLik(poisson.mdl)) - 4) / log(logLik(poisson.mld.full)))
summary(poisson.mld.full)
summary(poisson.mdl)
trial <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
trial <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
summary(trial)
trial <- glm(TARGET ~ STARS, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
summary(trial)
trial <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
trial2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(trial,trial2)
pchisq(2.76913,1)
pchisq(2.71,1)
pchisq(0.45,1)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
summary(poisson.mdl1)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal + STARS,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal + STARS,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
summary(poisson.mdl2)
1 -pchisq(deviance(poisson.mdl1)-deviance(poisson.mdl2),1)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal + STARS,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
summary(poisson.mdl2)
1 -pchisq(deviance(poisson.mdl1)-deviance(poisson.mdl2),1)
poisson.full - glm(TARGET ~ .,family = poisson(link = 'log'), data = train )
poisson.full - glm(TARGET ~ .,family = poisson(link = 'log'), data = train )
poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train )
summary(poisson.full)
poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train[,c(-1,-17)] )
summary(poisson.full)
1 -pchisq(deviance(poisson.mdl2)-deviance(poisson.full),11)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
pchisq(15689,9594)
glance <- broom::glance(poisson.mdl1)
finglance <- broom::finish_glance(glance,poisson.mdl1)
finglance
glance
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
glance.poisson.mdl1 <- broom::glance(poisson.mdl1)
poisson.mdl1.gof <- 1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
# poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
# summary(poisson.mdl2)
#
# poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train[,c(-1,-17)] )
# summary(poisson.full)
# 1 -pchisq(deviance(poisson.mdl2)-deviance(poisson.full),11)
lmtest::lrtest(poisson.mdl1)
lmtest::lrtest.default(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
1 - pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
1 - pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
