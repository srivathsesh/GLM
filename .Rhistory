ggplot(data = MB2, aes(x = TARGET_WINS, y = lasso.pred, color = Pitch_H_Outlier)) + geom_point()
ggplot(data = MB2, aes(x = TARGET_WINS, y = TARGET_WINS - lasso.pred, color = Pitch_H_Outlier)) + geom_point()
ggplot(data = MB2[which(MB2$Pitch_H_Outlier==F)], aes(x = TARGET_WINS, y = TARGET_WINS - lasso.pred, color = Pitch_H_Outlier)) + geom_point()
ggplot(data = MB2[which(MB2$Pitch_H_Outlier==F),], aes(x = TARGET_WINS, y = TARGET_WINS - lasso.pred, color = Pitch_H_Outlier)) + geom_point()
M
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = TARGET_WINS - lasso.pred, color = Pitch_H_Outlier)) + geom_point()
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = TARGET_WINS - lasso.pred, color = Pitch_H_Outlier)) + geom_point()
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = TARGET_WINS - pred, color = Pitch_H_Outlier)) + geom_point()
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = (TARGET_WINS - pred), color = Pitch_H_Outlier)) + geom_point()
hist(MB2$pred)
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point()
MBcha <- MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
mutate(resid = TARGET_WINS - pred)
MBcha <- MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
mutate(resid = TARGET_WINS - pred)
class(MB2$pred)
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
mutate(resid = TARGET_WINS - as.vector(pred)) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point()
MB2$pred <- as.numeric(MB2$pred)
MB2 %>% dplyr::filter(Pitch_H_outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point()
MB2 %>% dplyr::filter(Pitch_H_Outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point()
library(glmnet)
grid = 10^seq(10,-2,length = 100)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
xl <- model.matrix(TARGET_WINS ~., data = MB2)[,-1]
colnames(xl) <- gsub("TRUE", "",colnames(xl))
colnames(MB2) <- gsub("TRUE", "",colnames(MB2))
reqcols_l <- intersect(colnames(x), colnames(xl))
xl2 <- xl[,reqcols_l]
lasso.pred <- predict(lasso.mod,s = lasso.out$lambda.min,newx = as.matrix(MB2[,reqcols_l]))
MB2$pred <- lasso.pred
MB2 %>% dplyr::filter(Pitch_H_Outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point()
library(glmnet)
grid = 10^seq(10,-2,length = 100)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
xl <- model.matrix(TARGET_WINS ~., data = MB2)[,-1]
colnames(xl) <- gsub("TRUE", "",colnames(xl))
colnames(MB2) <- gsub("TRUE", "",colnames(MB2))
reqcols_l <- intersect(colnames(x), colnames(xl))
xl2 <- xl[,reqcols_l]
lasso.pred <- predict(lasso.mod,s = lasso.out$lambda.min,newx = as.matrix(MB2[,reqcols_l]))
MB2$pred <- as.numeric(lasso.pred)
MB2 %>% dplyr::filter(Pitch_H_Outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point()
# R Squared
lasso.mod$dev.ratio
Candidate_Lasso <- names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10]
formula <- paste("TARGET_WINS ~ ",paste(Candidate_Lasso, collapse = " + "))
lasso.selection.lm <- stepAIC(lm(TARGET_WINS ~ 1, data = cordata), scope = list(lower = ~1, upper = formula), direction = "both", trace = F)
summary(lasso.selection.lm)
car::vif(lasso.selection.lm)
# cordata$Pitch_H_Outlier <- as.numeric(cordata$Pitch_H_Outlier)
# summary(lm(data = cordata ,  TARGET_WINS ~ flag + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_BATTING_H  + TEAM_BASERUN_CS ))
MB2 %>% dplyr::filter(Pitch_H_Outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw()
MB2 %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw() %>%
dplyr::filter(Pitch_H_Outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw()
library(glmnet)
grid = 10^seq(10,-2,length = 100)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
xl <- model.matrix(TARGET_WINS ~., data = MB2)[,-1]
colnames(xl) <- gsub("TRUE", "",colnames(xl))
colnames(MB2) <- gsub("TRUE", "",colnames(MB2))
reqcols_l <- intersect(colnames(x), colnames(xl))
xl2 <- xl[,reqcols_l]
lasso.pred <- predict(lasso.mod,s = lasso.out$lambda.min,newx = as.matrix(MB2[,reqcols_l]))
MB2$pred <- as.numeric(lasso.pred)
MB2 %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw()
MB2 %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw()
library(glmnet)
grid = 10^seq(10,-2,length = 100)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
xl <- model.matrix(TARGET_WINS ~., data = MB2)[,-1]
colnames(xl) <- gsub("TRUE", "",colnames(xl))
colnames(MB2) <- gsub("TRUE", "",colnames(MB2))
reqcols_l <- intersect(colnames(x), colnames(xl))
xl2 <- xl[,reqcols_l]
lasso.pred <- predict(lasso.mod,s = lasso.out$lambda.min,newx = as.matrix(MB2[,reqcols_l]))
MB2$pred <- as.numeric(lasso.pred)
MB2 %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw()
MB2 %>%
dplyr::filter(Pitch_H_Outlier == F) %>%
mutate(resid = TARGET_WINS - pred) %>%
ggplot(mapping = aes(x = TARGET_WINS, y = resid, color = Pitch_H_Outlier)) + geom_point() + geom_smooth(method = "lm") + theme_bw()
# R Squared
lasso.mod$dev.ratio
Candidate_Lasso <- names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10]
formula <- paste("TARGET_WINS ~ ",paste(Candidate_Lasso, collapse = " + "))
lasso.selection.lm <- stepAIC(lm(TARGET_WINS ~ 1, data = cordata), scope = list(lower = ~1, upper = formula), direction = "both", trace = F)
summary(lasso.selection.lm)
car::vif(lasso.selection.lm)
# cordata$Pitch_H_Outlier <- as.numeric(cordata$Pitch_H_Outlier)
# summary(lm(data = cordata ,  TARGET_WINS ~ flag + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_BATTING_H  + TEAM_BASERUN_CS ))
fpdf <- data.frame(coef = coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T)[2:10], variables = names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10])
fpdf <- data.frame(coef = coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T)[2:10], variables = names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10])
names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10]
coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),][2:10]
fpdf <- data.frame(coef = coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),][2:10], variables = names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10])
vars <- names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10]
vars
coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),][2:10]
data.frame(coef = coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),][2:10], variables = vars)
fdf <- data.frame(coef = coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),][2:10], variables = vars)
caret::featurePlot(fdf$coef,fdf$variables)
caret::featurePlot(x = fdf$coef, y = fdf$variables)
caret::featurePlot(y = fdf$coef, x = fdf$variables)
caret::featurePlot(x = fdf$coef, y = fdf$variables)
install.packages('forcat')
install.packages('forcats')
plsdf <- data.frame(x[,-15:-18], cordata$TARGET_WINS)
names(plsdf)[15] <- "TARGET_WINS"
pls.lm <- pls::plsr(TARGET_WINS ~ ., data  = plsdf, scale = T, validation = "CV")
pls::validationplot(pls.lm, val.type = "RMSEP")
pls::validationplot(pls.lm)
library(pls)
validationplot(pls.lm)
plot(varImp(pls.lm),top = 10)
library(care)
library(caret)
plot(varImp(pls.lm),top = 10)
varImp(pls.lm)
plot(pls::R2(pls.lm))
colnames(x)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)
plsdf <- plsdf[,-15]
colnames(plsdf)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
colnames(plsdf)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
names(plsdf)[16] <- "TARGET_WINS"
colnames(plsdf)[16] <- "TARGET_WINS"
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)[16] <- "TARGET_WINS"
colnames(plsdf)
plsdf <- plsdf[,-15]
colnames(plsdf)
pls.lm <- pls::plsr(TARGET_WINS ~ ., data  = plsdf, scale = T, validation = "CV")
library(pls)
validationplot(pls.lm)
summary(pls.lm)
library(caret)
plot(varImp(pls.lm),top = 10)
plot(pls::R2(pls.lm))
pls.df <- pls.lm$scores[,1:4]
View(pls.df)
pls.df <- data.frame(pls.lm$scores[,1:4],plsdf$TARGET_WINS)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)[16] <- "TARGET_WINS"
outliers <- plsdf[,15]
plsdf <- plsdf[,-15]
pls.lm <- pls::plsr(TARGET_WINS ~ ., data  = plsdf, scale = T, validation = "CV")
library(pls)
validationplot(pls.lm)
summary(pls.lm)
library(caret)
plot(varImp(pls.lm),top = 10)
plot(pls::R2(pls.lm))
pls.df <- data.frame(pls.lm$scores[,1:4],plsdf$TARGET_WINS,outliers)
colnames(pls.df)[5] <- "TARGET_WINS"
pls.lm.2 <- lm(data = pls.df,formula = TARGET_WINS ~ . )
summary(pls.lm.2)
pls.df <- data.frame(pls.lm$scores[,1:4],plsdf$TARGET_WINS)
colnames(pls.df)[5] <- "TARGET_WINS"
pls.lm.2 <- lm(data = pls.df,formula = TARGET_WINS ~ . )
summary(pls.lm.2)
plot(pls.lm.2)
summary(pls.lm.2)
anova(pls.lm.2)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)[16] <- "TARGET_WINS"
outliers <- plsdf[,15]
plsdf <- plsdf[,-15]
pls.lm <- pls::plsr(TARGET_WINS ~ ., data  = plsdf, scale = T, validation = "CV")
library(pls)
validationplot(pls.lm)
summary(pls.lm)
library(caret)
plot(varImp(pls.lm),top = 10)
plot(pls::R2(pls.lm))
pls.df <- data.frame(pls.lm$scores[,1:4],plsdf$TARGET_WINS)
colnames(pls.df)[5] <- "TARGET_WINS"
pls.lm.2 <- lm(data = pls.df,formula = TARGET_WINS ~ . )
plot(pls.lm.2)
summary(pls.lm.2)
anova(pls.lm.2)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)[16] <- "TARGET_WINS"
outliers <- plsdf[,15]
plsdf <- plsdf[,-15]
pls.lm <- pls::plsr(TARGET_WINS ~ ., data  = plsdf, scale = T, validation = "CV")
library(pls)
validationplot(pls.lm)
summary(pls.lm)
library(caret)
plot(varImp(pls.lm),top = 10)
plot(pls::R2(pls.lm))
pls.df <- data.frame(pls.lm$scores[,1:4],plsdf$TARGET_WINS)
colnames(pls.df)[5] <- "TARGET_WINS"
pls.lm.2 <- lm(data = pls.df,formula = TARGET_WINS ~ . )
plot(pls.lm.2)
summary(pls.lm.2)
anova(pls.lm.2)
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
library(dplyr)
# Read the data in
MB <- read.csv('MoneyBall.csv')
cols <- colnames(MB)
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
sanitycheck <- sanitycheck %>%  mutate(cv = sd/mean)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
# indicator variables for record missing
MB <- MB %>%
mutate(Missing_BatSO = as.logical(ifelse(is.na(TEAM_BATTING_SO),1,0))) %>%
mutate(Missing_BasSB = as.logical(ifelse(is.na(TEAM_BASERUN_SB),1,0))) %>%
mutate(Missing_BasCS = as.logical(ifelse(is.na(TEAM_BASERUN_CS),1,0))) %>%
mutate(Missing_PitSO = as.logical(ifelse(is.na(TEAM_PITCHING_SO),1,0))) %>%
mutate(Missing_FieldDP = as.logical(ifelse(is.na(TEAM_FIELDING_DP),1,0)))
MB$Filter <- as.logical(ifelse(rowSums(MB[,18:22]) > 0 ,1, 0))
library(ggplot2)
# p0 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Missing_BatSO, fill = Missing_BatSO)) + geom_histogram(alpha = 0.5)
p1 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_HR, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
p2 <- ggplot(data = MB, mapping = aes(x = TEAM_BATTING_SO, color = Filter, fill = Filter)) + geom_histogram(alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(p1,p2,ncol = 2)
cordata <- MB %>% dplyr::select(cols[c(-1,-11)])
cordata <- cordata[complete.cases(cordata),]
corrplot::corrplot(cor(cordata),tl.cex = 0.8)
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Filter)) + geom_point()
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_H, fill = Filter, color = Filter)) + geom_histogram(alpha = 0.5) + facet_grid(Filter ~ .)
MB <- MB %>%
dplyr::mutate(Pitch_H_Outlier = as.logical(ifelse(TEAM_PITCHING_H >= 1890, 1,0)))
MB_test <- MB %>% filter(Filter == F)
ggplot(data = MB_test,mapping = aes(x = TEAM_PITCHING_H, color = Pitch_H_Outlier, fill = Pitch_H_Outlier)) + geom_histogram(alpha = 0.5) + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_H, y = TEAM_BATTING_H, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_SO, y = TEAM_BATTING_SO, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_BB, y = TEAM_BATTING_BB, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB_test, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
MB <- MB  %>%
mutate(BatHR_Filter = as.logical(ifelse(TEAM_BATTING_HR <= 59, 1,0))) %>%
mutate(BatSO_Filter = as.logical(ifelse(TEAM_BATTING_SO <= 250, 1,0))) %>%
mutate(PitSO_Filter = as.logical(ifelse(TEAM_PITCHING_SO > 2000, 1, 0)))
colnames(MB)[1] <- "INDEX"
Pitch_H_outlierT <- MB$INDEX[MB$Pitch_H_Outlier]
BatSO_Filter_T <- MB$INDEX[MB$BatSO_Filter]
PitSOFilter_T <- MB$INDEX[MB$PitSO_Filter]
MB <- MB %>% mutate (flag = as.logical(ifelse(INDEX %in% setdiff(setdiff(Pitch_H_outlierT,BatSO_Filter_T), PitSOFilter_T), 1,0)))
MB$HRSO_Filter <- as.logical(ifelse(rowSums(MB[,c('BatHR_Filter','BatSO_Filter')]) > 0 ,1, 0))
ggplot(data = MB, mapping = aes(x = TEAM_PITCHING_HR, y = TEAM_BATTING_HR, color = Pitch_H_Outlier )) + geom_point() + theme_bw()
ggplot(data = MB, mapping = aes(y = TEAM_BATTING_SO, x = TEAM_PITCHING_SO, color = flag)) + geom_point() + theme_bw()
ggplot(data = MB, mapping = aes(y = TEAM_BATTING_SO, x = TEAM_PITCHING_SO, color = BatSO_Filter)) + geom_point() + theme_bw()
ggplot(data = MB, mapping = aes(y = TEAM_BATTING_SO, x = TEAM_PITCHING_SO, color = PitSO_Filter)) + geom_point() + theme_bw()
reqcols <- colnames(MB)[c(-1,-11,-18:-23,-25,-29)]
cordata <- MB %>% dplyr::select(reqcols)
reqrows <- complete.cases(cordata)
cordata <- cordata[reqrows,]
# remove the lower end of the Batting SO and outliers in Pitching SO
cordata <- cordata %>%
dplyr::filter(BatSO_Filter == !T) %>%
dplyr::filter(PitSO_Filter == !T)
ggplot(data = cordata, mapping = aes(y = TARGET_WINS, x = TEAM_BATTING_HR, color = flag)) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
ggplot(data = cordata, mapping = aes(y = TARGET_WINS, x = TEAM_BATTING_HR, color = as.factor(Pitch_H_Outlier))) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
ggplot(data = cordata, mapping = aes(x = TEAM_FIELDING_E, y = TARGET_WINS, color = as.factor(Pitch_H_Outlier))) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
ggplot(data = cordata, mapping = aes(x = TEAM_FIELDING_E, y = TARGET_WINS, color = flag)) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
colnames(cordata)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata)
summary(simplemod)
colnames(cordata)
car::vif(simplemod)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata)
summary(simplemod)
car::vif(simplemod)
View(cordata)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata)
summary(simplemod)
car::vif(simplemod)
car::vif(simplemod)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata[,-17:-19])
summary(simplemod)
car::vif(simplemod)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata[,c(1:9,16)])
summary(simplemod)
car::vif(simplemod)
plot(simplemod)
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
colnames(x)[15:18] <- c("Pitch_H_Outlier","BatSO_Filter", "PitSO_Filter","flag")
caret::nearZeroVar(x,saveMetrics = T)
View(x)
pca <- princomp(x[,-16:-17],cor = T)
summary(pca)
cumvariance <- cumsum(pca$sdev^2) / sum(pca$sdev^2)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
plot(cumvariance, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance)
pca.scores <- pca$scores[,1:6]
df <- data.frame(pca.scores,MB[reqrows,2])
colnames(df)[9] <- c("TARGET_WINS")
colnames(df)[7] <- c("TARGET_WINS")
View(x)
View(df)
library(MASS)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6 + flag)
View(df)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
anova(step.lm)
plot(step.lm)
plot(pca.scores[,1], pca.scores[,2], xlab = 'Principle Componet 1', ylab = 'Principle Component 2')
plot(pca.scores[,1], pca.scores[,2], xlab = 'Principle Componet 1', ylab = 'Principle Component 2',col = ifelse(cordata$Pitch_H_Outlier, "red", "black"))
plot(pca.scores[,1], pca.scores[,2], xlab = 'Principle Componet 1', ylab = 'Principle Component 2',col = ifelse(cordata$flag, "red", "black"))
reqcols <- colnames(MB)[c(-1,-11,-18:-23,-29)]
cordata <- MB %>% dplyr::select(reqcols)
reqrows <- complete.cases(cordata)
cordata <- cordata[reqrows,]
cordata <- cordata %>%
dplyr::filter(BatSO_Filter == !T) %>%
dplyr::filter(PitSO_Filter == !T)
ggplot(data = cordata, mapping = aes(y = TARGET_WINS, x = TEAM_BATTING_HR, color = flag)) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
ggplot(data = cordata, mapping = aes(y = TARGET_WINS, x = TEAM_BATTING_HR, color = as.factor(Pitch_H_Outlier))) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
ggplot(data = cordata, mapping = aes(x = TEAM_FIELDING_E, y = TARGET_WINS, color = flag)) + geom_point() + theme_bw()+ geom_smooth(method = "lm")
colnames(cordata)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata[,c(1:9,16)])
summary(simplemod)
simplemod <- lm(formula = TARGET_WINS ~ . , data = cordata[,c(1:9,16:17)])
summary(simplemod)
car::vif(simplemod)
plot(simplemod)
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
colnames(x)[15:18] <- c("Pitch_H_Outlier","BatSO_Filter", "PitSO_Filter","flag")
x <- model.matrix(TARGET_WINS ~., data = cordata)[,-1]
View(x)
colnames(x)[15:19] <- c("Pitch_H_Outlier","Bat_HR_Filter",BatSO_Filter", "PitSO_Filter","flag")
colnames(x)[15:19] <- c("Pitch_H_Outlier","Bat_HR_Filter","BatSO_Filter", "PitSO_Filter","flag")
View(x)
caret::nearZeroVar(x,saveMetrics = T)
pca <- princomp(x[,-17:-18],cor = T)
summary(pca)
cumvariance <- cumsum(pca$sdev^2) / sum(pca$sdev^2)
pca.scores <- pca$scores[,1:6]
df <- data.frame(pca.scores,MB[reqrows,2])
colnames(df)[7] <- c("TARGET_WINS")
View(x)
plot(pca.scores[,1], pca.scores[,2], xlab = 'Principle Componet 1', ylab = 'Principle Component 2',col = ifelse(x[,16], "red", "black"))
caret::nearZeroVar(x,saveMetrics = T)
View(x)
plot(pca.scores[,1], pca.scores[,2], xlab = 'Principle Componet 1', ylab = 'Principle Component 2',col = ifelse(x[,15], "red", "black"))
plot(pca.scores[,1], pca.scores[,2], xlab = 'Principle Componet 1', ylab = 'Principle Component 2',col = ifelse(x[,15], "blue", "black"))
View(x)
plot(pca.scores[,1], pca.scores[,3], xlab = 'Principle Componet 1', ylab = 'Principle Component 3',col = ifelse(x[,16], "red", "black"))
plot(pca.scores[,2], pca.scores[,3], xlab = 'Principle Componet 2', ylab = 'Principle Component 3',col = ifelse(x[,16], "red", "black"))
plot(pca.scores[,2], pca.scores[,3], xlab = 'Principle Componet 2', ylab = 'Principle Component 3',col = ifelse(x[,15], "blue", "black"))
View(x)
df <- data.frame(pca.scores,MB[reqrows,2],x[,15:19])
colnames(df)[7] <- c("TARGET_WINS")
View(df)
df <- df %>% dplyr::mutate(cluster = Pitch_H_Outlier + Bat_HR_Filter/10)
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = cluster )) + geom_point() + theme_bw()
df <- data.frame(pca.scores,MB[reqrows,2],x[,15:19])
df <- df %>% dplyr::mutate(cluster = as.factor(Pitch_H_Outlier + Bat_HR_Filter/10))
colnames(df)[7] <- c("TARGET_WINS")
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = cluster )) + geom_point() + theme_bw()
caret::nearZeroVar(df)
caret::nearZeroVar(df, saveMetrics = T)
df <- df %>% dplyr::mutate(cluster = as.factor(Pitch_H_Outlier + Bat_HR_Filter/10)) %>%
dplyr::mutate(cluster2 = as.factor(cluster + flag/10))
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = cluster2 )) + geom_point() + theme_bw()
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = BatSO_Filter )) + geom_point() + theme_bw()
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = flag) + geom_point() + theme_bw()
library(MASS)
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = flag)) + geom_point() + theme_bw()
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = cluster )) + geom_point() + theme_bw()
lower.lm <- lm(data = df, formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
df <- data.frame(pca.scores,MB[reqrows,2],x[,15:19])
df <- df %>% dplyr::mutate(cluster = as.factor(Pitch_H_Outlier + Bat_HR_Filter/10))
colnames(df)[7] <- c("TARGET_WINS")
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = cluster )) + geom_point() + theme_bw()
ggplot(data = df, mapping = aes(x = Comp.1, y = Comp.2, color = flag)) + geom_point() + theme_bw()
library(MASS)
lower.lm <- lm(data = df, formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df, formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
lower.lm <- lm(data = df[,-13], formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df[,-13], formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
lower.lm <- lm(data = df[,-13], formula = TARGET_WINS ~ 1)
upper.lm <- lm(data = df[,-13], formula = TARGET_WINS ~ .)
step.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "both", trace = F)
summary(step.lm)
anova(step.lm)
plot(step.lm)
forward.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "forward", trace = F)
summary(forward.lm)
plot(forward.lm)
backward.lm <- stepAIC(lower.lm, scope = list(upper = formula(upper.lm), lower = ~1), direction = "backward", trace = F)
summary(backward.lm)
plot(backward.lm)
summary(backward.lm)
plot(backward.lm)
library(VIM)
MB2 <- kNN(data = MB,variable = colnames(MB)[c(-1,-11,-18:-27)], k = 5 )
sanitycheck2 <- do.call(rbind,dfapply(MB2,favstats, select = is.numeric))
MB2 <- MB2 %>% subset(select = rownames(sanitycheck2))
MB2 <- MB2[,c(-1,-11)]
x1 <- model.matrix(TARGET_WINS ~ ., data = MB2)
pca2 <- princomp(x1,cor = T)
cumvariance2 <- cumsum(pca2$sdev^2) / sum(pca2$sdev^2)
plot(cumvariance2, xlab = "Component Number", ylab = "Cumulative Variance", type = "l")
points(cumvariance2)
pca2.scores <- pca2$scores[,1:6]
df2 <- data.frame(pca2.scores,MB2$TARGET_WINS)
colnames(df2)[7] <- 'TARGET_WINS'
lower2.lm <- lm(data = df2, formula = TARGET_WINS ~ 1)
upper2.lm <- lm(data = df2, formula = TARGET_WINS ~ .)
step2.lm <- stepAIC(lower2.lm, scope = list(upper = formula(upper2.lm), lower = ~1), direction = "both", trace = F)
summary(step2.lm)
anova(step2.lm)
plot(step2.lm)
View(x)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)[16] <- "TARGET_WINS"
outliers <- plsdf[,15]
plsdf <- plsdf[,-15]
pls.lm <- pls::plsr(TARGET_WINS ~ ., data  = plsdf, scale = T, validation = "CV")
library(pls)
validationplot(pls.lm)
summary(pls.lm)
plsdf <- data.frame(x[,-16:-18], cordata$TARGET_WINS)
plsdf <- plsdf %>% dplyr::filter(Pitch_H_Outlier == F)
colnames(plsdf)[16] <- "TARGET_WINS"
library(glmnet)
grid = 10^seq(10,-2,length = 100)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
Candidate_Lasso <- names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10]
formula <- paste("TARGET_WINS ~ ",paste(Candidate_Lasso, collapse = " + "))
lasso.selection.lm <- stepAIC(lm(TARGET_WINS ~ 1, data = cordata), scope = list(lower = ~1, upper = formula), direction = "both", trace = F)
library(glmnet)
grid = 10^seq(10,-2,length = 100)
lasso.out <- cv.glmnet(x,df$TARGET_WINS,alpha = 1)
plot(lasso.out)
lasso.mod <- glmnet(x,df$TARGET_WINS,alpha = 1, lambda = lasso.out$lambda.min)
xl <- model.matrix(TARGET_WINS ~., data = MB2)[,-1]
colnames(xl) <- gsub("TRUE", "",colnames(xl))
colnames(MB2) <- gsub("TRUE", "",colnames(MB2))
reqcols_l <- intersect(colnames(x), colnames(xl))
xl2 <- xl[,reqcols_l]
lasso.pred <- predict(lasso.mod,s = lasso.out$lambda.min,newx = as.matrix(MB2[,reqcols_l]))
Candidate_Lasso
colnames(cordata)
View(x)
Candidate_Lasso <- names(coef(lasso.mod)[order(abs(round(coef(lasso.mod),3)),decreasing = T),])[2:10]
formula <- paste("TARGET_WINS ~ ",paste(Candidate_Lasso, collapse = " + "))
formula
View(x)
View(cordata)
lasso.selection.lm <- stepAIC(lm(TARGET_WINS ~ 1, data = cordata), scope = list(lower = ~1, upper = TARGET_WINS ~  Pitch_H_Outlier + BatHR_Filter + TEAM_BATTING_3B + TEAM_FIELDING_E + TEAM_FIELDING_DP + TEAM_BATTING_HR + TEAM_BATTING_2B + TEAM_BASERUN_CS + TEAM_BATTING_BB), direction = "both", trace = F)
summary(lasso.selection.lm)
car::vif(lasso.mod)
car::vif(lasso.selection.lm)
plot(lasso.selection.lm)
