train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
hist(train$TARGET)
hist(test$TARGET)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET")
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[-train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
nrow(train) + nrow(test) - nrow(winedata)
nrow(winedata)
nrow(winedata)*0.75
test <- winedata[-train,]
test <- winedata[-train]
test <- winedata[!winedata$INDEX %in% train$INDEX,]
nrow(train) + nrow(test) - nrow(winedata)
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
predictors <- colnames(winedata)[unlist(mosaic::dfapply(winedata, is.numeric))][-1]
predictors
poisson.mld.full <- glm(TARGET ~ ., family = poisson(link = 'log'), data = winedata[complete.cases(winedata),predictors])
summary(poisson.mld.full)
poisson.mdl <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
(deviance(poisson.mld.full) - deviance(poisson.mdl))/deviance(poisson.mld.full)
abs(deviance(poisson.mld.full) - deviance(poisson.mdl))/deviance(poisson.mdl)
1 - ((log(logLik(poisson.mdl)) - 4) / log(logLik(poisson.mld.full)))
summary(poisson.mld.full)
summary(poisson.mdl)
trial <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
trial <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
summary(trial)
trial <- glm(TARGET ~ STARS, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
summary(trial)
trial <- glm(TARGET ~ STARS + LabelAppeal + Alcohol, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
trial2 <- glm(TARGET ~ STARS + LabelAppeal, family = poisson(link = 'log'),data = winedata[complete.cases(winedata),])
lmtest::lrtest(trial,trial2)
pchisq(2.76913,1)
pchisq(2.71,1)
pchisq(0.45,1)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
summary(poisson.mdl1)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal + STARS,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal + STARS,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
summary(poisson.mdl2)
1 -pchisq(deviance(poisson.mdl1)-deviance(poisson.mdl2),1)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal + STARS,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
summary(poisson.mdl2)
1 -pchisq(deviance(poisson.mdl1)-deviance(poisson.mdl2),1)
poisson.full - glm(TARGET ~ .,family = poisson(link = 'log'), data = train )
poisson.full - glm(TARGET ~ .,family = poisson(link = 'log'), data = train )
poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train )
summary(poisson.full)
poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train[,c(-1,-17)] )
summary(poisson.full)
1 -pchisq(deviance(poisson.mdl2)-deviance(poisson.full),11)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
pchisq(15689,9594)
glance <- broom::glance(poisson.mdl1)
finglance <- broom::finish_glance(glance,poisson.mdl1)
finglance
glance
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
glance.poisson.mdl1 <- broom::glance(poisson.mdl1)
poisson.mdl1.gof <- 1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
# poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
# summary(poisson.mdl2)
#
# poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train[,c(-1,-17)] )
# summary(poisson.full)
# 1 -pchisq(deviance(poisson.mdl2)-deviance(poisson.full),11)
lmtest::lrtest(poisson.mdl1)
lmtest::lrtest.default(poisson.mdl1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
1 - pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
1 - pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
1 - pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
1 - pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
pchisq(deviance(poisson.mdl1),poisson.mdl1$df.residual)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
pchisq(0,1)
1 - pchisq(poisson.mdl1$null.deviance - deviance(poisson.mdl1),1)
lmtest::lrtest(poisson.mdl1)
poisson.mdl1$null.deviance - deviance(poisson.mdl1
)
pchisq(1494.4,1)
(poisson.mdl1$null.deviance - deviance(poisson.mdl1))/poisson.mdl1$null.deviance
glance.poisson.mdl1 <- broom::glance(poisson.mdl1)
glance.poisson.mdl1
pseudoR.Sq <- (poisson.mdl1$null.deviance - poisson.mdl1$deviance)/poisson.mdl1$null.deviance
pseudoR.Sq
poisson.mdl1.predict <- predict(poisson.mdl1,newdata = subset(test,!is.na(test$LabelAppeal)), type = 'response')
poisson.mdl1.predict
hist(poisson.mdl1.predict)
hist(round(poisson.mdl1.predict,0))
glance.poisson.mdl1$MAE <- mean(abs(test$TARGET[!is.na(test$TARGET)] - round(poisson.mdl1.predict,0)))
knitr::kable(glance.poisson.mdl1,digits = 2,caption = "TARGET ~ LabelAppeal Stats")
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
lmtest::lrtest(poisson.mdl1)
glance.poisson.mdl1 <- broom::glance(poisson.mdl1)
glance.poisson.mdl1$pseudoR.Sq <- (poisson.mdl1$null.deviance - poisson.mdl1$deviance)/poisson.mdl1$null.deviance
poisson.mdl1.predict <- predict(poisson.mdl1,newdata = subset(test,!is.na(test$LabelAppeal)), type = 'response')
glance.poisson.mdl1$MAE <- mean(abs(test$TARGET[!is.na(test$TARGET)] - round(poisson.mdl1.predict,0)))
knitr::kable(glance.poisson.mdl1,digits = 2,caption = "TARGET ~ LabelAppeal Stats")
# poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
# summary(poisson.mdl2)
#
# poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train[,c(-1,-17)] )
# summary(poisson.full)
# 1 -pchisq(deviance(poisson.mdl2)-deviance(poisson.full),11)
exp(0.255)
exp(-0.01)
1-exp(-0.01)
(1-exp(-0.01)*100)
round(1-exp(-0.01),4)
poisson.mdl1.coefs <- broom::tidy(poisson.mdl1)
poisson.mdl1.coefs
exp(poisson.mdl1.coefs[2,2])
round(exp(poisson.mdl1.coefs[2,2]),0)
plot(poisson.mdl1)
chumma <- broom::augment(poisson.mdl1)
head(chumma)
plot(chumma$.cooksd,chumma$.resid)
View(chumma)
par(mfrow = c(2,2))
plot(poisson.mdl1)
plot(poisson.mdl1)
chumma$TARGET0 <- train$TARGET0
ggplot2::ggplot(data = chumma, mapping = aes(x = .hat,color = TARGET0)) + geom_histogram()
ggplot2::ggplot(data = chumma, mapping = aes(x = .hat,color = TARGET0, fill = TARGET0)) + geom_histogram()
plot(poisson.mdl1$data$TARGET , round(poisson.mdl1$fitted.values,0))
plot(poisson.mdl1$data$TARGET , round(poisson.mdl1$fitted.values,0))
matrix(c(1,2,3,4,5,5), ncol = 2)
matrix(c(1,2,3,4,5,5), ncol = 2, byrow = T)
layout <- matrix(c(1,2,3,4,5,5), ncol = 2, byrow = T)
par(layout)
plot(poisson.mdl1)
plot(poisson.mdl1$data$TARGET , round(poisson.mdl1$fitted.values,0), xlab = "TARGET", ylab = "Rounded fitted")
layout <- matrix(c(1,2,3,4,5,5), ncol = 2, byrow = T)
layout(layout)
plot(poisson.mdl1)
plot(poisson.mdl1$data$TARGET , round(poisson.mdl1$fitted.values,0), xlab = "TARGET", ylab = "Rounded fitted")
layout <- matrix(c(1,2,3,4,5,5), ncol = 2, byrow = T)
layout(layout)
plot(poisson.mdl1)
plot(poisson.mdl1$data$TARGET , round(poisson.mdl1$fitted.values,0), xlab = "TARGET", ylab = "Rounded fitted")
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train)
summary(poisson.mdl2)
lmtest::lrtest(poisson.mdl2)
lmtest::lrtest(poisson.mdl2,poisson.mdl1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train, subset = (!is.na(STARS)))
lmtest::lrtest(poisson.mdl2,poisson.mdl1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train, subset = (!is.na(LabelAppeal)))
summary(poisson.mdl2)
lmtest::lrtest(poisson.mdl2)
lmtest::lrtest(poisson.mdl2,poisson.mdl1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train[!is.na(LabelAppeal),])
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train[!is.na(train$LabelAppeal),])
summary(poisson.mdl2)
lmtest::lrtest(poisson.mdl2)
lmtest::lrtest(poisson.mdl2,poisson.mdl1)
set.seed(10)
train <- winedata %>% dplyr::filter(!is.na(LabelAppeal) & !is.na(STARS))  dplyr::sample_frac(0.75)
set.seed(10)
train <- winedata %>% dplyr::filter(!is.na(LabelAppeal) & !is.na(STARS)) %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
set.seed(10)
train <- winedata %>% dplyr::filter(!is.na(LabelAppeal) & !is.na(STARS)) %>%
dplyr::group_by(TARGET0) M
set.seed(10)
train <- winedata %>% dplyr::filter(!is.na(LabelAppeal) & !is.na(STARS)) %>%
dplyr::group_by(TARGET0) %>%
dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
set.seed(10)
train <- winedata %>% dplyr::filter(!is.na(LabelAppeal) & !is.na(STARS)) %>%
dplyr::group_by(TARGET0) %>%
dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,] %>% dplyr::filter(!is.na(LabelAppeal) & !is.na(STARS))
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
summary(poisson.mdl2)
plot(train$TARGET, train$STARS)
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
lmtest::lrtest(poisson.mdl2)
summary(poisson.mdl2)
1 - pchisq(4457,7055)
plot(train$TARGET, round(poisson.mdl2$fitted.values,0))
plot(train$TARGET[!is.na(TARGET$STARS)], round(poisson.mdl2$fitted.values,0))
plot(train$TARGET[!is.na(train$STARS)], round(poisson.mdl2$fitted.values,0))
knitr::opts_chunk$set(echo = F, warning = F, message = F)
winedata <- read.csv(file = 'wine.csv')
library(mosaic)
# Compute overall statistic and show missing values
sanitycheck <- do.call(rbind,dfapply(winedata,favstats, select = is.numeric))
rowname <- rownames(sanitycheck)
rownames(sanitycheck) <- rowname
knitr::kable(round(sanitycheck,2), caption = "Summary Stats and missing values")
Missing.Stars <- as.factor(ifelse(is.na(winedata$STARS),1,0))
Missing.Alch <- as.factor(ifelse(is.na(winedata$Alcohol),1,0))
Missing.Sulph <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.pH <- as.factor(ifelse(is.na(winedata$Sulphates),1,0))
Missing.TSD <- as.factor(ifelse(is.na(winedata$TotalSulfurDioxide),1,0))
Missing.FSD <- as.factor(ifelse(is.na(winedata$FreeSulfurDioxide),1,0))
Missing.Chl <- as.factor(ifelse(is.na(winedata$Chlorides),1,0))
Missing.ResSug <- as.factor(ifelse(is.na(winedata$ResidualSugar),1,0))
winedataeda <- cbind(winedata, Missing.ResSug,Missing.Chl,Missing.FSD,Missing.TSD,Missing.pH,Missing.Sulph,Missing.Alch,Missing.Stars)
# Write to file for examination
# write.csv(file = 'winedatamod.csv', winedata)
library(ggplot2)
p <- ggplot(data = winedataeda)
p + geom_bar(mapping = aes(x = TARGET, col = Missing.Stars, fill = Missing.Stars)) + theme_classic()
#winedata %>% group_by(TARGET) %>% summarise_at("STARS", function(x) sum(is.na(x))/length(x)*100)
windedataMelt <- reshape2::melt(winedata[,-1])
ggplot(data = windedataMelt,mapping = aes(x = value)) + geom_histogram() + facet_wrap(~variable,scales = "free_x") + theme_bw()
wine.complete <- winedata[complete.cases(winedata),]
cordata <- cor(wine.complete)
corrplot::corrplot(cordata, tl.cex = 0.7)
winedata <- winedata %>% mutate(TARGET0 = as.factor(ifelse(TARGET > 0 ,0, 1)))
predictors <- colnames(winedata)[c(-1,-2,-17)]
response <- c("TARGET","TARGET0")
tr <- rpart::rpart(formula = TARGET0 ~ ., data = winedata[,c(predictors, response[2])], method = "class")
library(partykit)
plot(partykit::as.party(tr), gp = gpar(fontsize = 8 ))
randtr <- randomForest::randomForest(formula = TARGET0 ~ ., data = winedata[complete.cases(winedata),c(predictors, response[2])], importance = T)
randomForest::varImpPlot(randtr,main = 'Variable Importance plot - Random forest')
windedata.filtered <- winedata %>% filter(TARGET0 == 0)
tr2 <- rpart::rpart(formula = TARGET ~ ., data = windedata.filtered[,c(predictors, response[1])])
plot(as.party(tr2),gp = gpar(fontsize = 8 ))
randtr2 <- randomForest::randomForest(formula = TARGET ~ ., data = windedata.filtered[complete.cases(windedata.filtered),c(predictors, response[1])], importance = T)
randomForest::varImpPlot(randtr2, main = "Variable importance plot from random forest - TARGET")
set.seed(10)
train <- winedata %>%  dplyr::sample_frac(0.75)
test <- winedata[!winedata$INDEX %in% train$INDEX,]
par(mfrow = c(1,2))
hist(train$TARGET, main = "TARGET from training sample", xlab = "TARGET", col = "red")
hist(test$TARGET, main = "TARGET from test sample", xlab = "TARGET", col = "blue")
poisson.mdl1 <- glm(TARGET ~ LabelAppeal,family = poisson(link = 'log'), data = train)
summary(poisson.mdl1)
lmtest::lrtest(poisson.mdl1)
glance.poisson.mdl1 <- broom::glance(poisson.mdl1)
glance.poisson.mdl1$pseudoR.Sq <- (poisson.mdl1$null.deviance - poisson.mdl1$deviance)/poisson.mdl1$null.deviance
poisson.mdl1.predict <- predict(poisson.mdl1,newdata = subset(test,!is.na(test$LabelAppeal)), type = 'response')
poisson.mdl1.coefs <- broom::tidy(poisson.mdl1)
glance.poisson.mdl1$MAE <- mean(abs(test$TARGET[!is.na(test$TARGET)] - round(poisson.mdl1.predict,0)))
knitr::kable(glance.poisson.mdl1,digits = 2,caption = "Simple Poisson model statistics")
# poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + Alcohol,family = poisson(link = 'log'), data = train)
# summary(poisson.mdl2)
#
# poisson.full <- glm(TARGET ~ .,family = poisson(link = 'log'), data = train[,c(-1,-17)] )
# summary(poisson.full)
# 1 -pchisq(deviance(poisson.mdl2)-deviance(poisson.full),11)
layout <- matrix(c(1,2,3,4,5,5), ncol = 2, byrow = T)
layout(layout)
plot(poisson.mdl1)
plot(poisson.mdl1$data$TARGET , round(poisson.mdl1$fitted.values,0), xlab = "TARGET", ylab = "Rounded fitted")
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train[!is.na(train$LabelAppeal),])
summary(poisson.mdl2)
lmtest::lrtest(poisson.mdl2)
plot(train$TARGET[!is.na(train$STARS)], round(poisson.mdl2$fitted.values,0))
drop1(poisson.mdl2)
drop1(poisson.mdl2,test = "Chisq")
broom::tidy(,Last.value)
broom::tidy(drop1(poisson.mdl2,test = "Chisq"))
hmm <- drop1(poisson.mdl2,test = "Chisq")
hmm$Df
hmm <- drop1(poisson.mdl2,test = "LRT")
hmm
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS + ResidualSugar, family = poisson(link = "log"), data = train[!is.na(train$LabelAppeal),])
summary(poisson.mdl2)
lmtest::lrtest(poisson.mdl2)
hmm <- drop1(poisson.mdl2,test = "LRT")
hmm
nobs(poisson.mdl2)
nobs(poisson.mdl1)
poisson.mdl2 <- glm(TARGET ~ LabelAppeal + STARS, family = poisson(link = "log"), data = train[!is.na(train$LabelAppeal),])
hmm <- drop1(poisson.mdl2,test = "LRT")
hmm
nobs(poisson.mdl1)
nobs(poisson.mdl2)
lmtest::lrtest(poisson.mld.full,nb.mdl)
lmtest::lrtest(poisson.mdl2)
summary(poisson.mdl2)
summary(poisson.mdl2)
lmtest::lrtest(poisson.mdl2)
drop1(poisson.mdl2)
drop1(poisson.mdl2, test = "Chisq")
