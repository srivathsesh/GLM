model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("SalePrice = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
summary(model3b)
anova(model3b)
lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
plot.new()
qqnorm(model3bdata$.resid)
lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
model3c <- lm(GPA~HS_ENGL + SAT_VERB + SAT_QUAN, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB','SAT_QUAN')
model3cdata <- broom::augment(model3c)
coefs3c <- round(coefficients(model3c),2)
signs3c <- ifelse(sign(coefs3c)==1,"+", "-")
Betas3c <- paste(abs(coefs3c[2:length(coefs3c)]),"*",Predictors)
model3ceqn <- paste("SalePrice = ",paste(coefs3c[1],paste(paste(signs3c[2:length(signs3c)], Betas3c),collapse = " ")))
summary(model3c)
anova(model3c)
layout(layoutm)
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layoutm
library(lattice)
layout(layoutm)
xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
plot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
qqnorm(y = model3c$residuals)
lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
plot(model3c)
# lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
# qqnorm(y = model3c$residuals)
# lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layout(layoutm)
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
# lattice::xyplot(.resid~GPA,data = model3cdata,type =c("p"))
# qqnorm(y = model3c$residuals)
# lattice::xyplot(.resid~HS_ENGL,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3cdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_QUAN,data = model3cdata,type =c("p","r"))
layout(layoutm)
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
layout(matrix(c(1,2,3,4),byrow = 2, nrow = 2, ncol = 2))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
plot(x = model3bdata$GPA, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$SAT_VERB, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$HS_ENGL, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
# lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
# plot.new()
# qqnorm(model3bdata$.resid)
# lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
# layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
layout(matrix(c(1,2,3,4,5,5),byrow = 2, nrow = 2, ncol = 2))
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
matrix(c(1,2,3,4,5,5),byrow = 2, nrow = 2, ncol = 2)
matrix(c(1,2,3,4,5,5),byrow = 3, nrow = 2, ncol = 2)
matrix(c(1,2,3,4,5,5),byrow = 3, nrow = 2, ncol = 2)
matrix(c(1,2,3,4,5,5),byrow = T, nrow = 3, ncol = 2)
layout(matrix(c(1,2,3,4,5,5),byrow = T, nrow = 3, ncol = 2))
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$GPA, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$.fitted, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
plot(model3cdata$.hat)
8/nrow(GPA)
plot(model3c)
influence.measures(model3c)
rstudent(model3c)
plot(rstudent(model3c))
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$.fitted, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
# read data in
GPA <- readr::read_csv(file = 'gpa.csv')
GPA1 <- head(GPA,8)
# GPA1 <- GPA1[c(-2,-5),] # To show that observations 2 and 5 are influential points
library(ggplot2)
ggplot(data = GPA1, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
# Model for question b
model1.lm <- lm(data = GPA1, formula = GPA ~ SAT_QUAN)
coefs <- round(coefficients(model1.lm),2)
signs <- ifelse(sign(coefs)==1,"+", "-")
Betas <- paste(abs(coefs[2:length(coefs)]),"*",'SAT_QUANT')
model1eqn <- paste("GPA = ",paste(coefs[1],paste(paste(signs[2:2], Betas),collapse = " ")))
model1data <- broom::augment(model1.lm)
df <- model1data[,c('GPA','SAT_QUAN','.fitted','.resid')]
knitr::kable(df,caption = "Predicted values and residuals")
z <- anova(model1.lm)
SSE <- z$`Sum Sq`[2]
ggplot(data = model1data, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_bw()
ggplot(data = GPA, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
model2.lm <- lm(data = GPA, formula = GPA ~ SAT_QUAN)
coefs_2 <- round(coefficients(model2.lm),2)
signs_2 <- ifelse(sign(coefs_2)==1,"+", "-")
Betas_2 <- paste(abs(coefs_2[2:length(coefs_2)]),"*",'SAT_QUANT')
model2eqn <- paste("GPA = ",paste(coefs_2[1],paste(paste(signs_2[2:2], Betas_2),collapse = " ")))
model2data <- broom::augment(model2.lm)
summary(model2.lm)
anova(model2.lm)
z2 <- anova(model2.lm)
SSE2 <- z2$`Sum Sq`[2]
MSE2 <- SSE2/nrow(model2data)
modelcomparison <- data.frame(Question = c(1,2),model = c(model1eqn, model2eqn), RSquared = c(mosaic::rsquared(model1.lm),mosaic::rsquared(model2.lm)), MSE = c(SSE/nrow(GPA1), MSE2),First_8obs_MSE = c(SSE/nrow(GPA1), sum(model2data$.resid[8]^2)/8) )
par(mfrow = c(1,2))
qqnorm(y=model2.lm$residuals)
qqline(y=model2.lm$residuals)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals')
pander::pandoc.table(modelcomparison,caption = "Model comparison")
model3a <- lm(data = GPA, formula = GPA ~ HS_ENGL)
coefs_3a <- round(coefficients(model3a),2)
signs_3a <- ifelse(sign(coefs_3a)==1,"+", "-")
Betas_3a <- paste(abs(coefs_3a[2:length(coefs_3a)]),"*",'HS_ENGL')
model3aeqn <- paste("GPA = ",paste(coefs_3a[1],paste(paste(signs_3a[2:2], Betas_3a),collapse = " ")))
model3adata <- broom::augment(model3a)
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm',se = F)
summary(model3a)
anova(model3a)
correlations <- cor(GPA)
corrplot::corrplot(correlations,tl.cex = 1)
p <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
p2 <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
library(gridExtra)
grid.arrange(p,p2, ncol = 2)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("GPA = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
summary(model3b)
anova(model3b)
layout(matrix(c(1,2,3,4),byrow = 2, nrow = 2, ncol = 2))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
plot(x = model3bdata$GPA, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$SAT_VERB, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$HS_ENGL, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
# lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
# plot.new()
# qqnorm(model3bdata$.resid)
# lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
# layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
model3c <- lm(GPA~HS_ENGL + SAT_VERB + SAT_QUAN, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB','SAT_QUAN')
model3cdata <- broom::augment(model3c)
coefs3c <- round(coefficients(model3c),2)
signs3c <- ifelse(sign(coefs3c)==1,"+", "-")
Betas3c <- paste(abs(coefs3c[2:length(coefs3c)]),"*",Predictors)
model3ceqn <- paste("GPA = ",paste(coefs3c[1],paste(paste(signs3c[2:length(signs3c)], Betas3c),collapse = " ")))
summary(model3c)
anova(model3c)
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$.fitted, y = model3cdata$.resid, xlab = 'GPA', ylab = 'Residuals')
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
summary(model3c)
ggplot(data = model3c, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth( se = F)
ggplot(data = model3cdata, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth() + theme_bw()
rstudent(model3c)
car::leveragePlots(model3c)
car::leveragePlots(model3c)
car::outlierTest(model3c)
car::av.plots(model3c)
car::plot(model3c, which=4)
plot(model3c, which=4)
plot(model3c, which=3)
plot(model3c, which=2)
plot(model3c, which=5)
model3cdata$student.res <- rstudent(model3c)
ggplot(data = model3cdata, mapping = aes(x = .fitted, y = student.res)) + geom_point() + geom_smooth() + theme_bw()
plot(model3c, which=4, main = "Cook's distance distribution")
plot(model3c, which=4)
plot(model3c, which=4, cook.levels = 0.1666)
plot(lm(data = mtcars,formual = mpg ~ .), which=4)
hist(model3cdata$.cooksd)
hist(model3cdata$.cooksd)
plot(model3cdata$.hat)
plot(model3cdata$.hat, ylab = 'Leverage')
plot(model3cdata$.hat, ylab = 'Leverage')
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance")
layoutmatrix <- matrix(c(1,1,2,3,4,5), ncol = 2, nrow = 2, byrow = T)
layout(layoutmatrix)
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals')
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage")
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance")
layoutmatrix <- matrix(c(1,1,2,3,4,5), ncol = 2, nrow = 3, byrow = T)
layout(layoutmatrix)
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals')
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage")
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance")
layoutmatrix <- matrix(c(1,1,2,3,4,5), ncol = 2, nrow = 3, byrow = T)
layout(layoutmatrix)
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals')
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage")
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance")
layoutmatrix <- matrix(c(1,1,2,3,4,5), ncol = 2, nrow = 3, byrow = T)
layout(layoutmatrix)
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals', xlab = "stud.Residuals")
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage",xlab = 'leverage')
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance",xlab = "Cook's Distance")
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals', xlab = "stud.Residuals")
par(mfrow = c(2,2))
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage",xlab = 'leverage')
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance",xlab = "Cook's Distance")
model3cdata$student.res <- rstudent(model3c)
ggplot(data = model3cdata, mapping = aes(x = .fitted, y = student.res)) + geom_point() + geom_smooth() + theme_bw()
res1 <- ggplot(data = model3cdata, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth() + theme_bw()
model3cdata$student.res <- rstudent(model3c)
res2 <- ggplot(data = model3cdata, mapping = aes(x = .fitted, y = student.res)) + geom_point() + geom_smooth() + theme_bw()
grid.arrange(res1,res2,ncol=2)
par(mfrow = c(2,1))
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals', xlab = "stud.Residuals")
par(mfrow = c(2,2))
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage",xlab = 'leverage')
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance",xlab = "Cook's Distance")
# layoutmatrix <- matrix(c(1,1,2,3,4,5), nrow = 3, ncol = 2, byrow = T)
a <- hist(model3cdata$student.res, main = 'Histogram of Studentized residuals', xlab = "stud.Residuals")
b <- plot(model3cdata$.hat, ylab = 'Leverage')
c < -hist(model3cdata$.hat,main = "Histogram of Leverage",xlab = 'leverage')
# layoutmatrix <- matrix(c(1,1,2,3,4,5), nrow = 3, ncol = 2, byrow = T)
a <- hist(model3cdata$student.res, main = 'Histogram of Studentized residuals', xlab = "stud.Residuals")
b <- plot(model3cdata$.hat, ylab = 'Leverage')
c <- hist(model3cdata$.hat,main = "Histogram of Leverage",xlab = 'leverage')
d <- plot(model3c, which=4, cook.levels = 0.1666)
e <- hist(model3cdata$.cooksd, main = "Histogram of cook's distance",xlab = "Cook's Distance")
grid.arrange(a,b,c,d,e,ncol= 2)
grid.arrange(list(a,b,c,d,e),ncol= 2)
grid.arrange(list(a,b,c,d,e),layout_matrix = layoutmatrix)
grid.arrange(c(a,b,c,d,e),layout_matrix = layoutmatrix)
# layoutmatrix <- matrix(c(1,1,2,3,4,5), nrow = 3, ncol = 2, byrow = T)
hist(model3cdata$student.res, main = 'Histogram of Studentized residuals', xlab = "stud.Residuals")
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,main = "Histogram of Leverage",xlab = 'leverage')
plot(model3c, which=4, cook.levels = 0.1666)
hist(model3cdata$.cooksd, main = "Histogram of cook's distance",xlab = "Cook's Distance")
accidents <- data.frame(Number = seq(0:7), Frequency = c(121,199,21,12,5,4,2,1))
accidents <- accidents %>%
dplyr::mutate(total = Number * Frequency)
View(accidents)
View(accidents)
seq(0:7)
accidents <- data.frame(Number = 0:7, Frequency = c(121,199,21,12,5,4,2,1))
accidents <- accidents %>%
dplyr::mutate(total = Number * Frequency)
View(accidents)
mean_accidents <- sum(accidents$total)/sum(accidents$Frequency)
accidents <- accidents %>%
dplyr::mutate(SS = (Number - mean_accidents)^2 * Frequency)
Variance <- sum(accidents$SS) / (sum(accidents$Frequency) -1 )
accidents <- data.frame(Number = 0:7, Frequency = c(121,199,21,12,5,4,2,1))
accidents <- accidents %>%
dplyr::mutate(total = Number * Frequency)
mean_accidents <- sum(accidents$total)/sum(accidents$Frequency)
accidents <- accidents %>%
dplyr::mutate(SS = (Number - mean_accidents)^2 * Frequency)
Variance <- sum(accidents$SS) / (sum(accidents$Frequency) -1 )
Question <- c('a','b.1','b.2','b.3','b.4','c.1','c.2','d')
What <- c('Alcohol use', 'employed full time','employed part time','unemployed','non-participants','Low-Self Esteem', 'High-Self Esteem', 'Accidents per day')
Expected <- c(1500*0.65,1500*0.65,0.15 * 200,0.10 * 200,0.20 * 200,850*0.45, 850*0.55,round(mean_accidents,2))
Variance <- c(1500*0.65 * (1 - 0.65),0.55 * 200 * (1-0.55),0.15 * 200 * (1-0.15),0.10 * 200 * (1-0.10),0.20 * 200 * (1-0.20),round(Variance,2))
response <- data.frame(Question,What, Expected,Variance)
Variance <- c(1500*0.65 * (1 - 0.65),0.55 * 200 * (1-0.55),0.15 * 200 * (1-0.15),0.10 * 200 * (1-0.10),0.20 * 200 * (1-0.20),850*0.45*0.55,850*0.45*0.55,round(Variance,2))
response <- data.frame(Question,What, Expected,Variance)
knitr::opts_chunk$set(echo = FALSE, warning = F, message = F)
library(magrittr)
# read data in
GPA <- readr::read_csv(file = 'gpa.csv')
GPA1 <- head(GPA,8)
# GPA1 <- GPA1[c(-2,-5),] # To show that observations 2 and 5 are influential points
library(ggplot2)
ggplot(data = GPA1, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
# Model for question b
model1.lm <- lm(data = GPA1, formula = GPA ~ SAT_QUAN)
coefs <- round(coefficients(model1.lm),2)
signs <- ifelse(sign(coefs)==1,"+", "-")
Betas <- paste(abs(coefs[2:length(coefs)]),"*",'SAT_QUANT')
model1eqn <- paste("GPA = ",paste(coefs[1],paste(paste(signs[2:2], Betas),collapse = " ")))
model1data <- broom::augment(model1.lm)
df <- model1data[,c('GPA','SAT_QUAN','.fitted','.resid')]
knitr::kable(df,caption = "Predicted values and residuals")
z <- anova(model1.lm)
SSE <- z$`Sum Sq`[2]
ggplot(data = model1data, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_bw()
ggplot(data = GPA, mapping = aes(x = SAT_QUAN, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
model2.lm <- lm(data = GPA, formula = GPA ~ SAT_QUAN)
coefs_2 <- round(coefficients(model2.lm),2)
signs_2 <- ifelse(sign(coefs_2)==1,"+", "-")
Betas_2 <- paste(abs(coefs_2[2:length(coefs_2)]),"*",'SAT_QUANT')
model2eqn <- paste("GPA = ",paste(coefs_2[1],paste(paste(signs_2[2:2], Betas_2),collapse = " ")))
model2data <- broom::augment(model2.lm)
summary(model2.lm)
anova(model2.lm)
z2 <- anova(model2.lm)
SSE2 <- z2$`Sum Sq`[2]
MSE2 <- SSE2/nrow(model2data)
modelcomparison <- data.frame(Question = c(1,2),model = c(model1eqn, model2eqn), RSquared = c(mosaic::rsquared(model1.lm),mosaic::rsquared(model2.lm)), MSE = c(SSE/nrow(GPA1), MSE2),First_8obs_MSE = c(SSE/nrow(GPA1), sum(model2data$.resid[8]^2)/8) )
par(mfrow = c(1,2))
qqnorm(y=model2.lm$residuals)
qqline(y=model2.lm$residuals)
plot(y = model2.lm$residuals,x = model2.lm$model$GPA, xlab = 'GPA', ylab = 'Residuals',main = 'GPA vs Residuals')
pander::pandoc.table(modelcomparison,caption = "Model comparison")
model3a <- lm(data = GPA, formula = GPA ~ HS_ENGL)
coefs_3a <- round(coefficients(model3a),2)
signs_3a <- ifelse(sign(coefs_3a)==1,"+", "-")
Betas_3a <- paste(abs(coefs_3a[2:length(coefs_3a)]),"*",'HS_ENGL')
model3aeqn <- paste("GPA = ",paste(coefs_3a[1],paste(paste(signs_3a[2:2], Betas_3a),collapse = " ")))
model3adata <- broom::augment(model3a)
ggplot(data = GPA, mapping = aes(x = HS_ENGL, y = GPA)) + geom_point() + theme_bw() + geom_smooth(method = 'lm',se = F)
summary(model3a)
anova(model3a)
correlations <- cor(GPA)
corrplot::corrplot(correlations,tl.cex = 1)
p <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = GPA)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
p2 <- ggplot(data = GPA, mapping = aes(x = SAT_VERB, y = HS_ENGL)) + geom_point() + geom_smooth(method = 'lm',se = F) + theme_classic()
library(gridExtra)
grid.arrange(p,p2, ncol = 2)
model3b <- lm(GPA~HS_ENGL + SAT_VERB, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB')
model3bdata <- broom::augment(model3b)
coefs3b <- round(coefficients(model3b),2)
signs3b <- ifelse(sign(coefs3b)==1,"+", "-")
Betas3b <- paste(abs(coefs3b[2:length(coefs3b)]),"*",Predictors)
model3beqn <- paste("GPA = ",paste(coefs3b[1],paste(paste(signs3b[2:length(signs3b)], Betas3b),collapse = " ")))
summary(model3b)
anova(model3b)
layout(matrix(c(1,2,3,4),byrow = 2, nrow = 2, ncol = 2))
qqnorm(model3bdata$.resid)
qqline(model3bdata$.resid)
plot(x = model3bdata$GPA, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$SAT_VERB, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
plot(x = model3bdata$HS_ENGL, y = model3bdata$.resid, xlab = 'GPA', ylab = 'Residuals')
# lattice::xyplot(.resid~GPA,data = model3bdata,type =c("p","r"))
# plot.new()
# qqnorm(model3bdata$.resid)
# lattice::xyplot(.resid~HS_ENGL,data = model3bdata,type =c("p","r"))
# lattice::xyplot(.resid~SAT_VERB,data = model3bdata,type =c("p","r"))
# layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
model3c <- lm(GPA~HS_ENGL + SAT_VERB + SAT_QUAN, data = GPA)
Predictors <- c('HS_ENGL','SAT_VERB','SAT_QUAN')
model3cdata <- broom::augment(model3c)
coefs3c <- round(coefficients(model3c),2)
signs3c <- ifelse(sign(coefs3c)==1,"+", "-")
Betas3c <- paste(abs(coefs3c[2:length(coefs3c)]),"*",Predictors)
model3ceqn <- paste("GPA = ",paste(coefs3c[1],paste(paste(signs3c[2:length(signs3c)], Betas3c),collapse = " ")))
summary(model3c)
anova(model3c)
layout(matrix(c(1,1,2,3,4,5),byrow = T, nrow = 3, ncol = 2))
plot(x = model3cdata$.fitted, y = model3cdata$.resid, xlab = 'fitted GPA', ylab = 'Residuals')
qqnorm(y = model3c$residuals)
qqline(model3c$residuals)
plot(x = model3cdata$HS_ENGL, y = model3cdata$.resid, xlab = 'HS_ENGL', ylab = 'Residuals')
plot(x = model3cdata$SAT_VERB, y = model3cdata$.resid, xlab = 'SAT_VERB', ylab = 'Residuals')
plot(x = model3cdata$SAT_QUAN, y = model3cdata$.resid, xlab = 'SAT_QUAN', ylab = 'Residuals')
summary(model3c)
res1 <- ggplot(data = model3cdata, mapping = aes(x = .fitted, y = .resid)) + geom_point() + geom_smooth() + theme_bw()
model3cdata$student.res <- rstudent(model3c)
res2 <- ggplot(data = model3cdata, mapping = aes(x = .fitted, y = student.res)) + geom_point() + geom_smooth() + theme_bw()
grid.arrange(res1,res2,ncol=2)
par(mfrow= c(3,2))
hist(model3cdata$student.res, xlab = "stud.Residuals", main = "")
plot(model3cdata$.hat, ylab = 'Leverage')
hist(model3cdata$.hat,xlab = 'leverage', main = "")
plot(model3c, which=4, cook.levels = 0.1666, main = "")
hist(model3cdata$.cooksd,xlab = "Cook's Distance", main= "")
accidents <- data.frame(Number = 0:7, Frequency = c(121,199,21,12,5,4,2,1))
accidents <- accidents %>%
dplyr::mutate(total = Number * Frequency)
mean_accidents <- sum(accidents$total)/sum(accidents$Frequency)
accidents <- accidents %>%
dplyr::mutate(SS = (Number - mean_accidents)^2 * Frequency)
Variance <- sum(accidents$SS) / (sum(accidents$Frequency) -1 )
Question <- c('a','b.1','b.2','b.3','b.4','c.1','c.2','d')
What <- c('Alcohol use', 'employed full time','employed part time','unemployed','non-participants','Low-Self Esteem', 'High-Self Esteem', 'Accidents per day')
Expected <- c(1500*0.65,1500*0.65,0.15 * 200,0.10 * 200,0.20 * 200,850*0.45, 850*0.55,round(mean_accidents,2))
Variance <- c(1500*0.65 * (1 - 0.65),0.55 * 200 * (1-0.55),0.15 * 200 * (1-0.15),0.10 * 200 * (1-0.10),0.20 * 200 * (1-0.20),850*0.45*0.55,850*0.45*0.55,round(Variance,2))
response <- data.frame(Question,What, Expected,Variance)
knitr::kable(response)
NBmean <- 12/0.4
NBVar <- 12(0.6)/0.4^2
NBVar <- 12*(0.6)/0.4^2
NBVar
NBmean
df <- data.frame(Mean = NBmean, Variance = NBvar, `Prob of Success by reaching 30` = p30)
p <- 0.4
n <- 30
r <- 12
NBmean <- r/p
NBVar <- r*(1-p)/p^2
p30 <- choose(n-1,r-1)*p^r*(1-p)^(n-r)
df <- data.frame(Mean = NBmean, Variance = NBvar, `Prob of Success by reaching 30` = p30)
df <- data.frame(Mean = NBmean, Variance = NBVar, `Prob of Success by reaching 30` = p30)
knitr::kable(df)
dbinom(3,5,0.4)
dbinom(2,5,0.4)
dbinom(1,5,0.4)
c(0.1:0.4)
0.1:0.4
(1:4)/10
p <- (1:4)/10
probs <- function(p,n = 6, i = 2) {
dbinom(i,n,p)
}
sapply(p,probs)
p <- (1:4)/10
probs <- function(p,n = 6, i = 2) {
dbinom(i,n,p)
}
probabilities <- sapply(p,probs)
df5 <- data.frame(p = p, `i=2` = probabilities)
knitr::kable(df5)
p <- (1:4)/10
probs <- function(p,n = 6, i = 2) {
dbinom(i,n,p)
}
probabilities <- sapply(p,probs)
df5 <- data.frame(p = p, `i=2` = round(probabilities,2))
knitr::kable(df5)
usdata <- read.csv('usdata.csv')
View(usdata)
null.lm <- glm(formula = VIOLRATE ~ 1)
null.lm <- glm(formula = VIOLRATE ~ 1, data = usdata)
summary(null.lm)
anova(null.lm)
model2.6.lm <- glm(formula = VIOLRATE ~ UNEMPRAT + DENSITY + GSPROD, data = usdata)
summary(model2.6.lm)
deviance(model2.6.lm)
(deviance(null.lm)- deviance(model2.6.lm))/deviance(null.lm)
rsquared(model2.6.lm)
mosaic::rsquared(model2.6.lm)
model2.6.lm <- glm(formula = VIOLRATE ~ UNEMPRAT + DENSITY + GSPROD, data = usdata,method = 'mle')
knitr::opts_chunk$set(echo = TRUE)
MB <- read.csv('MoneyBall.csv')
corrplot::corrplot(MB)
corrplot::corrplot(cor(MB))
View(MB)
mosaic::favstats(MB)
mosaic::fav_stats(MB)
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
library(mosaic)
sanitycheck <- do.call(rbind,dfapply(MB,favstats, select = is.numeric))
View(sanitycheck)
corrplot::corrplot(cor(MB))
install.packages("caret")
caret::findLinearCombos(MB)
